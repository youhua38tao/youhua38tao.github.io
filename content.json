{"meta":{"title":"DarkCrane","subtitle":"","description":"","author":"THL","url":"https://blog.darkcrane.com","root":"/"},"pages":[{"title":"404 Not Found","date":"2020-08-20T12:58:41.707Z","updated":"2020-08-20T12:58:41.707Z","comments":true,"path":"404.html","permalink":"https://blog.darkcrane.com/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"关于","date":"2020-08-20T12:52:46.662Z","updated":"2020-08-20T12:52:46.662Z","comments":false,"path":"about/index.html","permalink":"https://blog.darkcrane.com/about/index.html","excerpt":"","text":"这是关于页面，还没想好写什么！"},{"title":"archives","date":"2020-08-20T12:55:34.095Z","updated":"2020-08-20T12:55:34.095Z","comments":true,"path":"archives/index.html","permalink":"https://blog.darkcrane.com/archives/index.html","excerpt":"","text":""},{"title":"文章分类","date":"2020-08-20T12:53:54.335Z","updated":"2020-08-20T12:53:54.335Z","comments":true,"path":"categories/index.html","permalink":"https://blog.darkcrane.com/categories/index.html","excerpt":"","text":""},{"title":"comment","date":"2020-08-20T12:52:07.771Z","updated":"2020-08-20T12:52:07.771Z","comments":true,"path":"comment/index.html","permalink":"https://blog.darkcrane.com/comment/index.html","excerpt":"","text":"留言板 有什么问题请在此留言"},{"title":"LINKS","date":"2020-08-20T11:32:56.472Z","updated":"2020-08-20T11:32:56.472Z","comments":true,"path":"links/index.html","permalink":"https://blog.darkcrane.com/links/index.html","excerpt":"","text":"各位大佬想交换友链的话，请先添加我的友链后，在下方留言，必须要有名称、头像链接、和至少一个标签哦～ 示例: 名称： Darkcrane头像：https://cdn.jsdelivr.net/gh/youhua38tao/CDN/img/%E6%B5%B7%E7%BB%B5%E5%AE%9D%E5%AE%9D%E5%A4%B4%E5%83%8F.jpg网址： https://blog.darkcrane.com标签： Java、Android背景颜色参考： #87977F文字颜色参考： #EFEFEF"},{"title":"friend","date":"2020-02-29T17:33:20.518Z","updated":"2020-02-29T17:33:20.518Z","comments":true,"path":"friend/index.html","permalink":"https://blog.darkcrane.com/friend/index.html","excerpt":"","text":"Links 我的弟弟们 飞鱼舍 苏打绿的小迷妹 苦逼程序员"},{"title":"photo","date":"2020-08-20T12:50:37.925Z","updated":"2020-08-20T12:50:37.925Z","comments":true,"path":"photo/index.html","permalink":"https://blog.darkcrane.com/photo/index.html","excerpt":"","text":"照片墙 我会收集一些好康的照片"},{"title":"top","date":"2020-04-15T08:19:27.460Z","updated":"2020-04-15T08:19:27.460Z","comments":true,"path":"top/index.html","permalink":"https://blog.darkcrane.com/top/index.html","excerpt":"","text":"2020-04-15 主题跟新至2.6.1 2020-04-05 主题跟新至2.4.1 2020-03-22主题跟新至2.2.0 2020-03-22主题跟新至2.2.0 2020-03-11主题跟新至2.0.2 2020-01-29主题更换为volantis 1.6.2"},{"title":"标签云","date":"2020-08-20T12:53:12.261Z","updated":"2020-08-20T12:53:12.261Z","comments":true,"path":"tags/index.html","permalink":"https://blog.darkcrane.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"共产党宣言","slug":"共产党宣言","date":"2020-05-11T00:07:11.000Z","updated":"2020-05-11T00:07:11.000Z","comments":true,"path":"posts/f29ed8a2/","link":"","permalink":"https://blog.darkcrane.com/posts/f29ed8a2/","excerpt":"一个幽灵，共产主义的幽灵，在欧洲游荡。为了对这个幽灵进行神圣的围剿，旧欧洲的一切势力，教皇和沙皇、梅特涅和基佐、法国的激进派和德国的警察，都联合起来了。","text":"一个幽灵，共产主义的幽灵，在欧洲游荡。为了对这个幽灵进行神圣的围剿，旧欧洲的一切势力，教皇和沙皇、梅特涅和基佐、法国的激进派和德国的警察，都联合起来了。 有哪一个反对党不被它的当政的敌人骂为共产党呢？又有哪一个反对党不拿共产主义这个罪名去回敬更进步的反对党人和自己的反动敌人呢？ 从这一事实中可以得出两个结论： 共产主义已经被欧洲的一切势力公认为一种势力； 现在是共产党人向全世界公开说明自己的观点、自己的目的、自己的意图并且拿党自己的宣言来反驳关于共产主义幽灵的神话的时候了。 为了这个目的，各国共产党人集会于伦敦，拟定了如下的宣言，用英文、法文、德文、意大利文、弗拉芒文和丹麦文公布于世。 一、资产者和无产者至今一切社会的历史都是阶级斗争的历史。 自由民和奴隶、贵族和平民、领主和农奴、行会师傅和帮工，一句话，压迫者和被压迫者，始终处于相互对立的地位，进行不断的、有时隐蔽有时公开的斗争，而每一次斗争的结局都是整个社会受到革命改造或者斗争的各阶级同归于尽。 在过去的各个历史时代，我们几乎到处都可以看到社会完全划分为各个不同的等级，看到社会地位分成多种多样的层次。在古罗马，有贵族、骑士、平民、奴隶，在中世纪，有封建主、臣仆、行会师傅、帮工、农奴，而且几乎在每一个阶级内部又有一些特殊的阶层。 从封建社会的灭亡中产生出来的现代资产阶级社会并没有消灭阶级对立。它只是用新的阶级、新的压迫条件、新的斗争形式代替了旧的。 但是，我们的时代，资产阶级时代，却有一个特点：它使阶级对立简单化了。整个社会日益分裂为两大敌对的阵营，分裂为两大相互直接对立的阶级：资产阶级和无产阶级。 从中世纪的农奴中产生了初期城市的城关市民；从这个市民等级中发展出最初的资产阶级分子。 美洲的发现、绕过非洲的航行，给新兴的资产阶级开辟了新天地。东印度和中国的市场、美洲的殖民化、对殖民地的贸易、交换手段和一般商品的增加，使商业、航海业和工业空前高涨，因而使正在崩溃的封建社会内部的革命因素迅速发展。 以前那种封建的或行会的工业经营方式已经不能满足随着新市场的出现而增加的需求了。工场手工业代替了这种经营方式。行会师傅被工业的中间等级排挤掉了；各种行业组织之间的分工随着各个作坊内部的分工的出现而消失了。 但是，市场总是在扩大，需求总是在增加。甚至工场手工业也不再能满足需要了。于是，蒸汽和机器引起了工业生产的革命。现代大工业代替了工场手工业；工业中的百万富翁，一支一支产业大军的首领，现代资产者，代替了工业的中间等级。 大工业建立了由美洲的发现所准备好的世界市场。世界市场使商业、航海业和陆路交通得到了巨大的发展。这种发展又反过来促进了工业的扩展。同时，随着工业、商业、航海业和铁路的扩展，资产阶级也在同一程度上得到发展，增加自己的资本，把中世纪遗留下来的一切阶级排挤到后面去。 由此可见，现代资产阶级本身是一个长期发展过程的产物，是生产方式和交换方式的一系列变革的产物。 资产阶级的这种发展的每一个阶段，都伴随着相应的政治上的进展。它在封建主统治下是被压迫的等级，在公社里是武装的和自治的团体，在一些地方组成独立的城市共和国，在另一些地方组成君主国中的纳税的第三等级；后来，在工场手工业时期，它是等级君主国或专制君主国中同贵族抗衡的势力，而且是大君主国的主要基础；最后，从大工业和世界市场建立的时候起，它在现代的代议制国家里夺得了独占的政治统治。现代的国家政权不过是管理整个资产阶级的共同事务的委员会罢了。 资产阶级在历史上曾经起过非常革命的作用。 资产阶级在它已经取得了统治的地方把一切封建的、宗法的和田园般的关系都破坏了。它无情地斩断了把人们束缚于天然尊长的形形色色的封建羁绊，它使人和人之间除了赤裸裸的利害关系，除了冷酷无情的“现金交易”，就再也没有任何别的联系了。它把宗教虔诚、骑士热忱、小市民伤感这些情感的神圣发作，淹没在利己主义打算的冰水之中。它把人的尊严变成了交换价值，用一种没有良心的贸易自由代替了无数特许的和自力挣得的自由。总而言之，它用公开的、无耻的、直接的、露骨的剥削代替了由宗教幻想和政治幻想掩盖着的剥削。 资产阶级抹去了一切向来受人尊崇和令人敬畏的职业的神圣光环。它把医生、律师、教士、诗人和学者变成了它出钱招雇的雇佣劳动者。 资产阶级撕下了罩在家庭关系上的温情脉脉的面纱，把这种关系变成了纯粹的金钱关系。资产阶级揭示了，在中世纪深受反动派称许的那种人力的野蛮使用，是以极端怠惰作为相应补充的。它第一个证明了，人的活动能够取得什么样的成就。它创造了完全不同于埃及金字塔、罗马水道和哥特式教堂的奇迹；它完成了完全不同于民族大迁徙和十字军征讨的远征。 资产阶级除非对生产工具，从而对生产关系，从而对全部社会关系不断地进行革命，否则就不能生存下去。反之，原封不动地保持旧的生产方式，却是过去的一切工业阶级生存的首要条件。生产的不断变革，一切社会状况不停的动荡，永远的不安定和变动，这就是资产阶级时代不同于过去一切时代的地方。一切固定的僵化的关系以及与之相适应的素被尊崇的观念和见解都被消除了，一切新形成的关系等不到固定下来就陈旧了。一切等级的和固定的东西都烟消云散了，一切神圣的东西都被亵渎了。人们终于不得不用冷静的眼光来看他们的生活地位、他们的相互关系。 不断扩大产品销路的需要，驱使资产阶级奔走于全球各地。它必须到处落户，到处开发，到处建立联系。 资产阶级，由于开拓了世界市场，使一切国家的生产和消费都成为世界性的了。使反动派大为惋惜的是，资产阶级挖掉了工业脚下的民族基础。古老的民族工业被消灭了，并且每天都还在被消灭。它们被新的工业排挤掉了，新的工业的建立已经成为一切文明民族的生命攸关的问题；这些工业所加工的，已经不是本地的原料，而是来自极其遥远的地区的原料；它们的产品不仅供本国消费，而且同时供世界各地消费。旧的、靠本国产品来满足的需要，被新的、要靠极其遥远的国家和地带的产品来满足的需要所代替了。过去那种地方的和民族的自给自足和闭关自守状态，被各民族的各方面的互相往来和各方面的互相依赖所代替了。物质的生产是如此，精神的生产也是如此。各民族的精神产品成了公共的财产。民族的片面性和局限性日益成为不可能，于是由许多种民族的和地方的文学形成了一种世界的文学。 资产阶级，由于一切生产工具的迅速改进，由于交通的极其便利，把一切民族甚至最野蛮的民族都卷到文明中来了。它的商品的低廉价格，是它用来摧毁一切万里长城、征服野蛮人最顽强的仇外心理的重炮。它迫使一切民族——如果它们不想灭亡的话——采用资产阶级的生产方式；它迫使它们在自己那里推行所谓文明，即变成资产者。一句话，它按照自己的面貌为自己创造出一个世界。 资产阶级使农村屈服于城市的统治。它创立了巨大的城市，使城市人口比农村人口大大增加起来，因而使很大一部分居民脱离了农村生活的愚昧状态。正像它使农村从属于城市一样，它使未开化和半开化的国家从属于文明的国家，使农民的民族从属于资产阶级的民族，使东方从属于西方。 资产阶级日甚一日地消灭生产资料、财产和人口的分散状态。它使人口密集起来，使生产资料集中起来，使财产聚集在少数人的手里。由此必然产生的结果就是政治的集中。各自独立的、几乎只有同盟关系的、各有不同利益、不同法律、不同政府、不同关税的各个地区，现在已经结合为一个拥有统一的政府、统一的法律、统一的民族阶级利益和统一的关税的统一的民族。 资产阶级在它的不到一百年的阶级统治中所创造的生产力，比过去一切世代创造的全部生产力还要多，还要大。自然力的征服，机器的采用，化学在工业和农业中的应用，轮船的行驶，铁路的通行，电报的使用，整个整个大陆的开垦，河川的通航，仿佛用法术从地下呼唤出来的大量人口，——过去哪一个世纪料想到在社会劳动里蕴藏有这样的生产力呢？ 由此可见，资产阶级赖以形成的生产资料和交换手段，是在封建社会里造成的。在这些生产资料和交换手段发展的一定阶段上，封建社会的生产和交换在其中进行的关系，封建的农业和工场手工业组织，一句话，封建的所有制关系，就不再适应已经发展的生产力了。这种关系已经在阻碍生产而不是促进生产了。它变成了束缚生产的桎梏。它必须被炸毁，它已经被炸毁了。 起而代之的是自由竞争以及与自由竞争相适应的社会制度和政治制度、资产阶级的经济统治和政治统治。 现在，我们眼前又进行着类似的运动。资产阶级的生产关系和交换关系，资产阶级的所有制关系，这个曾经仿佛用法术创造了如此庞大的生产资料和交换手段的现代资产阶级社会，现在像一个魔法师一样不能再支配自己用法术呼唤出来的魔鬼了。几十年来的工业和商业的历史，只不过是现代生产力反抗现代生产关系、反抗作为资产阶级及其统治的存在条件的所有制关系的历史。只要指出在周期性的重复中越来越危及整个资产阶级社会生存的商业危机就够了。在商业危机期间，总是不仅有很大一部分制成的产品被毁灭掉，而且有很大一部分已经造成的生产力被毁灭掉。在危机期间，发生一种在过去一切时代看来都好像是荒唐现象的社会瘟疫，即生产过剩的瘟疫。社会突然发现自己回到了一时的野蛮状态；仿佛是一次饥荒、一场普遍的毁灭性战争，使社会失去了全部生活资料；仿佛是工业和商业全被毁灭了，——这是什么缘故呢？因为社会上文明过度，生活资料太多，工业和商业太发达。社会所拥有的生产力已经不能再促进资产阶级文明和资产阶级所有制关系的发展；相反，生产力已经强大到这种关系所不能适应的地步，它已经受到这种关系的阻碍；而它一着手克服这种障碍，就使整个资产阶级社会陷入混乱，就使资产阶级所有制的存在受到威胁。资产阶级的关系已经太狭窄了，再容纳不了它本身所造成的财富了。——资产阶级用什么办法来克服这种危机呢？一方面不得不消灭大量生产力，另一方面夺取新的市场，更加彻底地利用旧的市场。这究竟是怎样的一种办法呢？这不过是资产阶级准备更全面更猛烈的危机的办法，不过是使防止危机的手段越来越少的办法。 资产阶级用来推翻封建制度的武器，现在却对准资产阶级自己了。 但是，资产阶级不仅锻造了置自身于死地的武器；它还产生了将要运用这种武器的人——现代的工人，即无产者。 随着资产阶级即资本的发展，无产阶级即现代工人阶级也在同一程度上得到发展；现代的工人只有当他们找到工作的时候才能生存，而且只有当他们的劳动增殖资本的时候才能找到工作。这些不得不把自己零星出卖的工人，像其他任何货物一样，也是一种商品，所以他们同样地受到竞争的一切变化、市场的一切波动的影响。 由于推广机器和分工，无产者的劳动已经失去了任何独立的性质，因而对工人也失去了任何吸引力。工人变成了机器的单纯的附属品，要求他做的只是极其简单、极其单调和极容易学会的操作。因此，花在工人身上的费用，几乎只限于维持工人生活和延续工人后代所必需的生活资料。但是，商品的价格，从而劳动的价格，是同它的生产费用相等的。因此，劳动越使人感到厌恶，工资也就越少。不仅如此，机器越推广，分工越细致，劳动量出就越增加，这或者是由于工作时间的延长，或者是由于在一定时间内所要求的劳动的增加，机器运转的加速，等等。 现代工业已经把家长式的师傅的小作坊变成了工业资本家的大工厂。挤在工厂里的工人群众就像士兵一样被组织起来。他们是产业军的普通士兵，受着各级军士和军官的层层监视。他们不仅仅是资产阶级的、资产阶级国家的奴隶，他们每日每时都受机器、受监工、首先是受各个经营工厂的资产者本人的奴役。这种专制制度越是公开地把营利宣布为自己的最终目的，它就越是可鄙、可恨和可恶。 手的操作所要求的技巧和气力越少，换句话说，现代工业越发达，男工也就越受到女工和童工的排挤。对工人阶级来说，性别和年龄的差别再没有什么社会意义了。他们都只是劳动工具，不过因为年龄和性别的不同而需要不同的费用罢了。 当厂主对工人的剥削告一段落，工人领到了用现钱支付的工资的时候，马上就有资产阶级中的另一部分人——房东、小店主、当铺老板等等向他们扑来。 以前的中间等级的下层，即小工业家、小商人和小食利者，手工业者和农民——所有这些阶级都降落到无产阶级的队伍里来了，有的是因为他们的小资本不足以经营大工业，经不起较大的资本家的竞争；有的是因为他们的手艺已经被新的生产方法弄得不值钱了。无产阶级就是这样从居民的所有阶级中得到补充的。 无产阶级经历了各个不同的发展阶段。它反对资产阶级的斗争是和它的存在同时开始的。 最初是单个的工人，然后是某一工厂的工人，然后是某一地方的某一劳动部门的工人，同直接剥削他们的单个资产者作斗争。他们不仅仅攻击资产阶级的生产关系，而且攻击生产工具本身；他们毁坏那些来竞争的外国商品，捣毁机器，烧毁工厂，力图恢复已经失去的中世纪工人的地位。 在这个阶段上，工人是分散在全国各地并为竞争所分裂的群众。工人的大规模集结，还不是他们自己联合的结果，而是资产阶级联合的结果，当时资产阶级为了达到自己的政治目的必须而且暂时还能够把整个无产阶级发动起来。因此，在这个阶段上，无产者不是同自己的敌人作斗争，而是同自己的敌人的敌人作斗争，即同专制君主制的残余、地主、非工业资产者和小资产者作斗争。因此，整个历史运动都集中在资产阶级手里；在这种条件下取得的每一个胜利都是资产阶级的胜利。 但是，随着工业的发展，无产阶级不仅人数增加了，而且它结合成更大的集体，它的力量日益增长，它越来越感觉到自己的力量。机器使劳动的差别越来越小，使工资几乎到处都降到同样低的水平，因而无产阶级内部的利益、生活状况也越来越趋于一致。资产者彼此间日益加剧的竞争以及由此引起的商业危机，使工人的工资越来越不稳定；机器的日益迅速的和继续不断的改良，使工人的整个生活地位越来越没有保障；单个工人和单个资产者之间的冲突越来越具有两个阶级的冲突的性质。工人开始成立反对资产者的同盟；他们联合起来保卫自己的工资。他们甚至建立了经常性的团体，以便为可能发生的反抗准备食品。有些地方，斗争爆发为起义。 工人有时也得到胜利，但这种胜利只是暂时的。他们斗争的真正成果并不是直接取得的成功，而是工人的越来越扩大的联合。这种联合由于大工业所造成的日益发达的交通工具而得到发展，这种交通工具把各地的工人彼此联系起来。只要有了这种联系，就能把许多性质相同的地方性的斗争汇合成全国性的斗争，汇合成阶级斗争。而一切阶级斗争都是政治斗争。中世纪的市民靠乡间小道需要几百年才能达到的联合，现代的无产者利用铁路只要几年就可以达到了。 无产者组织成为阶级，从而组织成为政党这件事，不断地由于工人的自相竞争而受到破坏。但是，这种组织总是重新产生，并且一次比一次更强大，更坚固，更有力。它利用资产阶级内部的分裂，迫使他们用法律形式承认工人的个别利益。英国的十小时工作日法案就是一个例子。 旧社会内部的所有冲突在许多方面都促进了无产阶级的发展。资产阶级处于不断的斗争中：最初反对贵族；后来反对同工业进步有利害冲突的那部分资产阶级；经常反对一切外国的资产阶级。在这一切斗争中，资产阶级都不得不向无产阶级呼吁，要求无产阶级援助，这样就把无产阶级卷进了政治运动。于是，资产阶级自己就把自己的教育因素即反对自身的武器给予了无产阶级。 其次，我们已经看到，工业的进步把统治阶级的整批成员抛到无产阶级队伍里去，或者至少也使他们的生活条件受到威胁。他们也给无产阶级带来了大量的教育因素。 最后，在阶级斗争接近决战的时期，统治阶级内部的、整个旧社会内部的瓦解过程，就达到非常强烈、非常尖锐的程度，甚至使得统治阶级中的一小部分人脱离统治阶级而归附于革命的阶级，即掌握着未来的阶级。所以，正像过去贵族中有一部分人转到资产阶级方面一样，现在资产阶级中也有一部分人，特别是已经提高到从理论上认识整个历史运动这一水平的一部分资产阶级思想家，转到无产阶级方面来了。 在当前同资产阶级对立的一切阶级中，只有无产阶级是真正革命的阶级。其余的阶级都随着大工业的发展而日趋没落和灭亡，无产阶级却是大工业本身的产物。 中间等级，即小工业家、小商人、手工业者、农民，他们同资产阶级作斗争，都是为了维护他们这种中间等级的生存，以免于灭亡。所以，他们不是革命的，而是保守的。不仅如此，他们甚至是反动的，因为他们力图使历史的车轮倒转。如果说他们是革命的，那是鉴于他们行将转入无产阶级的队伍，这样，他们就不是维护他们目前的利益，而是维护他们将来的利益，他们就离开自己原来的立场，而站到无产阶级的立场上来。 流氓无产阶级是旧社会最下层中消极的腐化的部分，他们在一些地方也被无产阶级革命卷到运动里来，但是，由于他们的整个生活状况，他们更甘心于被人收买，去干反动的勾当。 在无产阶级的生活条件中，旧社会的生活条件已经被消灭了。无产者是没有财产的；他们和妻子儿女的关系同资产阶级的家庭关系再没有任何共同之处了；现代的工业劳动，现代的资本压迫，无论在英国或法国，无论在美国或德国，都有是一样的，都使无产者失去了任何民族性。法律、道德、宗教在他们看来全都是资产阶级偏见，隐藏在这些偏见后面的全都是资产阶级利益。 过去一切阶级在争得统治之后，总是使整个社会服从于它们发财致富的条件，企图以此来巩固它们已获得的生活地位。无产者只有废除自己的现存的占有方式，从而废除全部现存的占有方式，才能取得社会生产力。无产者没有什么自己的东西必须加以保护，他们必须摧毁至今保护和保障私有财产的一切。 过去的一切运动都是少数人的或者为少数人谋利益的运动。无产阶级的运动是绝大多数人的、为绝大多数人谋利益的独立的运动。无产阶级，现今社会的最下层，如果不炸毁构成官方社会的整个上层，就不能抬起头来，挺起胸来。 如果不就内容而就形式来说，无产阶级反对资产阶级的斗争首先是一国范围内的斗争。每一个国家的无产阶级当然首先应该打倒本国的资产阶级。 在叙述无产阶级发展的最一般的阶段的时候，我们循序探讨了现存社会内部或多或少隐蔽着的国内战争，直到这个战争爆发为公开的革命，无产阶级用暴力推翻资产阶级而建立自己的统治。 我们已经看到，至今的一切社会都是建立在压迫阶级和被压迫阶级的对立之上的。但是，为了有可能压迫一个阶级，就必须保证这个阶级至少有能够勉强维持它的奴隶般的生存的条件。农奴曾经在农奴制度下挣扎到公社成员的地位，小资产者曾经在封建专制制度的束缚下挣扎到资产者的地位。现代的工人却相反，他们并不是随着工业的进步而上升，而是越来越降到本阶级的生存条件以下。工人变成赤贫者，贫困比人口和财富增长得还要快。由此可以明显地看出，资产阶级再不能做社会的统治阶级了，再不能把自己阶级的生存条件当作支配一切的规律强加于社会了。资产阶级不能统治下去了，因为它甚至不能保证自己的奴隶维持奴隶的生活，因为它不得不让自己的奴隶落到不能养活它反而要它来养活的地步。社会再不能在它统治下生存下去了，就是说，它的生存不再同社会相容了。 资产阶级生存和统治的根本条件，是财富在私人手里的积累，是资本的形成和增殖；资本的条件是雇佣劳动。雇佣劳动完全是建立在工人的自相竞争之上的。资产阶级无意中造成而又无力抵抗的工业进步，使工人通过结社而达到的革命联合代替了他们由于竞争而造成的分散状态。于是，随着大工业的发展，资产阶级赖以生产和占有产品的基础本身也就从它的脚下被挖掉了。它首先生产的是它自身的掘墓人。资产阶级的灭亡和无产阶级的胜利是同样不可避免的。 二、无产者和共产党人共产党人同全体无产者的关系是怎样的呢？ 共产党人不是同其他工人政党相对立的特殊政党。 他们没有任何同整个无产阶级的利益不同的利益。 他们不提出任何特殊的原则，用以塑造无产阶级的运动。 共产党人同其他无产阶级政党不同的地方只是：一方面，在无产者不同的民族的斗争中，共产党人强调和坚持整个无产阶级共同的不分民族的利益；另一方面，在无产阶级和资产阶级的斗争所经历的各个发展阶段上，共产党人始终代表整个运动的利益。 因此，在实践方面，共产党人是各国工人政党中最坚决的、始终起推动作用的部分；在理论方面，他们胜过其余无产阶级群众的地方在于他们了解无产阶级运动的条件、进程和一般结果。 共产党人的最近目的是和其他一切无产阶级政党的最近目的一样的：使无产阶级形成为阶级，推翻资产阶级的统治，由无产阶级夺取政权。 共产党人的理论原理，决不是以这个或那个世界改革家所发明或发现的思想、原则为根据的。 这些原理不过是现存的阶级斗争、我们眼前的历史运动的真实关系的一般表述。废除先前存在的所有制关系，并不是共产主义所独具的特征。 一切所有制关系都经历了经常的历史更替、经常的历史变更。 例如，法国革命废除了封建的所有制，代之以资产阶级的所有制。 共产主义的特征并不是要废除一般的所有制，而是要废除资产阶级的所有制。 但是，现代的资产阶级私有制是建立在阶级对立上面、建立在一些人对另一些人的剥削上面的产品生产和占有的最后而又完备的表现。 从这个意义上说，共产党人可以把自己的理论概括为一句话：消灭私有制。 有人责备我们共产党人，说我们消灭个人挣得的、自己劳动得来的财产，要消灭构成个人的一切自由、活动和独立的基础的财产。 好一个劳动得来的、自己挣得的、自己赚来的财产！你们说的是资产阶级财产出现以前的那种小资产阶级、小农的财产吗？那种财产用不着我们去消灭，工业的发展已经把它消灭了，而且每天都在消灭它。 或者，你们说的是现代的资产阶级的私有财产吧？ 但是，难道雇佣劳动，无产者的劳动，会给无产者创造出财产来吗？没有的事。这种劳动所创造的资本，即剥削雇佣劳动的财产，只有在不断产生出新的雇佣劳动来重新加以剥削的条件下才能增殖的财产。现今的这种财产是在资本和雇佣劳动的对立中运动的。让我们来看看这种对立的两个方面吧。 做一个资本家，这就是说，他在生产中不仅占有一种纯粹个人的地位，而且占有一种社会地位。资本是集体的产物，它只有通过社会许多成员的共同活动，而且归根到底只有通过社会全体成员的共同活动，才能运动起来。 因此，资本不是一种个人力量，而是一种社会力量。 因此，把资本变为公共的、属于社会全体成员的财产，这并不是把个人财产变为社会财产。这里所改变的只是财产的社会性质。它将失掉它的阶级性质。 现在，我们来看看雇佣劳动。 雇佣劳动的平均价格是最低限度的工资，即工人为维持其工人的生活所必需的生活资料的数额。因此，雇佣工人靠自己的劳动所占有的东西，只够勉强维持他的生命的再生产。我们决不打算消灭这种供直接生命再生产用的劳动产品的个人占有，这种占有并不会留下任何剩余的东西使人们有可能支配别人的劳动。我们要消灭的只是这种占有的可怜的性质，在这种占有下，工人仅仅为增殖资本而活着，只有在统治阶级的利益需要他活着的时候才能活着。 在资产阶级社会里，活的劳动只是增殖已经积累起来的劳动的一种手段。在共产主义社会里，已经积累起来的劳动只是扩大、丰富和提高工人的生活的一种手段。 因此，在资产阶级社会里是过去支配现在，在共产主义社会里是现在支配过去。在资产阶级社会里，资本具有独立性和个性，而活动着的个人却没有独立性和个性。 而资产阶级却把消灭这种关系说成是消灭个性和自由！说对了。的确，正是要消灭资产者的个性、独立性和自由。 在现今的资产阶级生产关系的范围内，所谓自由就是自由贸易，自由买卖。 但是，买卖一消失，自由买卖也就会消失。关于自由买卖的言论，也像我们的资产阶级的其他一切关于自由的大话一样，仅仅对于不自由的买卖来说，对于中世纪被奴役的市民来说，才是有意义的，而对于共产主义要消灭买卖、消灭资产阶级生产关系和资产阶级本身这一点来说，却是毫无意义的。 我们要消灭私有制，你们就惊慌起来。但是，在你们的现存社会里，私有财产对十分之九的成员来说已经被消灭了；这种私有制这所以存在，正是因为私有财产对十分之九的成员来说已经不存在。可见，你们责备我们，是说我们要消灭那种以社会上的绝大多数人没有财产为必要条件的所有制。 总而言之，你们责备我们，是说我们要消灭你们的那种所有制。的确，我们是要这样做的。 从劳动不再能变为资本、货币、地租，一句话，不再能变为可以垄断的社会力量的时候起，就是说，从个人财产不再能变为资产阶级财产的时候起，你们说，个性被消灭了。 由此可见，你们是承认，你们所理解的个性，不外是资产者、资产阶级私有者。这样的个性确实应当被消灭。 共产主义并不剥夺任何人占有社会产品的权力，它只剥夺利用这种占有去奴役他人劳动的权力。 有人反驳说，私有制一消灭，一切活动就会停止，懒惰之风就会兴起。 这样说来，资产阶级社会早就应该因懒惰而灭亡了，因为在这个社会里劳者不获，获者不劳。所有这些顾虑，都可以归结为这样一个同义反复：一旦没有资本，也就不再有雇佣劳动了。 所有这些对共产主义的物质产品的占有方式和生产方式的责备，也被扩及到精神产品的占有和生产方面。正如阶级的所有制的终止在资产者看来是生产本身的终止一样，阶级的教育的终止在他们看来就等于一切教育的终止。 资产者唯恐失去的那种教育，绝大多数人来说是把人训练成机器。 但是，你们既然用你们资产阶级关于自由、教育、法等等的观念来衡量废除资产阶级所有制的主张，那就请你们不要同我们争论了。你们的观念本身是资产阶级的生产关系和所有制关系的产物，正像你们的法不过是被奉为法律的你们这个阶级的意志一样，而这种意志的内容是由你们这个阶级的物质生活条件决定的。 你们的利己观念使你们把自己的生产关系和所有制关系从历史的、在生产过程中是暂时的关系变成永恒的自然规律和理性规律，这种利己观念是你们和一切灭亡了的统治阶级所共有的。谈到古代所有制的时候你们所能理解的，谈到封建所有制的时候你们所能理解的，一谈到资产阶级所有制你们就再也不能理解了。 消灭家庭！连极端的激进派也对共产党人的这种可耻的意图表示愤慨。 现代的、资产阶级的家庭是建立在什么基础上的呢？是建立在资本上面，建立在私人发财上面的。这种家庭只是在资产阶级那里才以充分发展的形式存在着，而无产者的被迫独居和公开的卖淫则是它的补充。 资产者的家庭自然会随着它的这种补充的消失而消失，两者都要随着资本的消失而消失。 你们是责备我们要消灭父母对子女的剥削吗？我们承认这种罪状。 但是，你们说，我们用社会教育代替家庭教育，就是要消灭人们最亲密的关系。 而你们的教育不也是由社会决定的吗？不也是由你们进行教育时所处的那种社会关系决定的吗？不也是由社会通过学校等等进行的直接的或间接的干涉决定的吗？共产党人并没有发明社会对教育的作用；他们仅仅是要改变这种作用的性质，要使教育摆脱统治阶级的影响。 无产者的一切家庭联系越是由于大工业的发展而被破坏，他们的子女越是由于这种发展而被变成单纯的商品和劳动工具，资产阶级关于家庭和教育、关于父母和子女的亲密关系的空话就越是令人作呕。 但是，你们共产党人是要实行公妻制的啊，——整个资产阶级异口同声地向我们这样叫喊。 资产者是把自己的妻子看作单纯的生产工具的。他们听说生产工具将要公共使用，自然就不能不想到妇女也会遭到同样的命运。 他们想也没有想到，问题正在于使妇女不再处于单纯生产工具的地位。 其实，我们的资产者装得道貌岸然，对所谓的共产党人的正式公妻制表示惊讶，那是再可笑不过了。公妻制无需共产党人来实行，它差不多是一向就有的。 我们的资产者不以他们的无产者的妻子和女儿受他们支配为满足，正式的卖淫更不必说了，他们还以互相诱奸妻子为最大的享乐。资产阶级的婚姻实际上是公妻制。人们至多只能责备共产党人，说他们想用正式的、公开的公妻制来代替伪善地掩蔽着的公妻制。其实，不言而喻，随着现在的生产关系的消灭，从这种关系中产生的公妻制，即正式的和非正式的卖淫，也就消失了。 有人还责备共产党人，说他们要取消祖国，取消民族。 工人没有祖国。决不能剥夺他们所没有的东西。因为无产阶级首先必须取得政治统治，上升为民族的阶级，把自身组织成为民族，所以它本身还是民族的，虽然完全不是资产阶级所理解的那种意思。 随着资产阶级的发展，随着贸易自由的实现和世界市场的建立，随着工业生产以及与之相适应的生活条件的趋于一致，各国人民之间的民族分隔和对立日益消失。 无产阶级的统治将使它们更快地消失。联合的行动，至少是各文明国家的联合的行动，是无产阶级获得解放的首要条件之一。 人对人的剥削一消灭，民族对民族的剥削就会随之消灭。 民族内部的阶级对立一消失，民族之间的敌对关系就会随之消失。 从宗教的、哲学的和一切意识形态的观点对共产主义提出的种种责难，都不值得详细讨论了。 人们的观念、观点和概念，一句话，人们的意识，随着人们的生活条件、人们的社会关系、人们的社会存在的改变而改变，这难道需要经过深思才能了解吗？ 思想的历史除了证明精神生产随着物质生产的改造而改造，还证明了什么呢？任何一个时代的统治思想始终都不过是统治阶级的思想。 当人们谈到使整个社会革命化的思想时，他们只是表明了一个事实：在旧社会内部已经形成了新社会的因素，旧思想的瓦解是同旧生活条件的瓦解步调一致的。 当古代世界走向灭亡的时候，古代的各种宗教就被基督教战胜了。当基督教思想在18世纪被启蒙思想击败的时候，封建社会正在同当时革命的资产阶级进行殊死的斗争。信仰自由和宗教自由的思想，不过表明竞争在信仰领域里占统治地位罢了。 “但是”，有人会说，“宗教的、道德的、哲学的、政治的、法的观念等等在历史发展的进程中固然是不断改变的，而宗教、道德、哲学、政治和法在这种变化中却始终保存着。 此外，还存在着一切社会状态所共有的永恒真理，如自由、正义等等。但是共产主义要废除永恒真理，它要废除宗教、道德，而不是加以革新，所以共产主义是同至今的全部历史发展相矛盾的。” 这种责难归结为什么呢？至今的一切社会的历史都是在阶级对立中运动的，而这种对立在不同的时代具有不同的形式。 但是，不管阶级对立具有什么样的形式，社会上一部分人对另一部分人的剥削却是过去各个世纪所共有的事实。因此，毫不奇怪，各个世纪的社会意识，尽管形形色色、千差万别，总是在某些共同的形式中运动的，这些形式，这些意识形式，只有当阶级对立完全消失的时候才会完全消失。 共产主义革命就是同传统的所有制关系实行最彻底的决裂；毫不奇怪，它在自己的发展进程中要同传统的观念实行最彻底的决裂。 不过，我们还是把资产阶级对共产主义的种种责难撇开吧。 前面我们已经看到，工人革命的第一步就是使无产阶级上升为统治阶级，争得民主。 无产阶级将利用自己的政治统治，一步一步地夺取资产阶级的全部资本，把一切生产工具集中在国家即组织成为统治阶级的无产阶级手里，并且尽可能快地增加生产力的总量。 要做到这一点，当然首先必须对所有权和资产阶级生产关系实行强制性的干涉，也就是采取这样一些措施，这些措施在经济上似乎是不够充分的和没有力量的，但是在运动进程中它们会越出本身，而且作为变革全部生产方式的手段是必不可少的。 这些措施在不同的国家里当然会是不同的。 但是，最先进的国家几乎都可以采取下面的措施： 1、剥夺地产，把地租用于国家支出。 2、征收高额累进税。 3、废除继承权。 4、没收一切流亡分子和叛乱分子的财产。 5、通过拥有国家资本和独享垄断权的国家银行，把信贷集中在国家手里。 6、把全部运输业集中在国家的手里。 7、按照总的计划增加国家工厂和生产工具，开垦荒地和改良土壤。 8、实行普遍劳动义务制，成立产业军，特别是在农业方面。 9、把农业和工业结合起来，促使城乡对立逐步消灭。 10、对所有儿童实行公共的和免费的教育。取消现在这种形式的儿童的工厂劳动。把教育同物质生产结合起来，等等。 当阶级差别在发展进程中已经消失而全部生产集中在联合起来的个人的手里的时候，公共权力就失去政治性质。原来意义上的政治权力，是一个阶级用以压迫另一个阶级的有组织的暴力。如果说无产阶级在反对资产阶级的斗争中一定要联合为阶级，如果说它通过革命使自己成为统治阶级，并以统治阶级的资格用暴力消灭旧的生产关系，那么它在消灭这种生产关系的同时，也就消灭了阶级对立的存在条件，消灭阶级本身的存在条件，从而消灭了它自己这个阶级的统治。 代替那存在着阶级和阶级对立的资产阶级旧社会的，将是这样一个联合体，在那里，每个人的自由发展是一切人的自由发展的条件。 三、社会主义的和共产主义的文献1、反动的社会主义（甲）封建的社会主义法国和英国的贵族，按照他们的历史地位所负的使命，就是写一些抨击现代资产阶级社会的作品。在法国的1830年七月革命和英国的改革运动中，他们再一次被可恨的暴发户打败了。从此就再谈不上严重的政治斗争了。他们还能进行的只是文字斗争。但是，即使在文字方面也不可能重弹复辟时期的老调了。为了激起同情，贵族们不得不装模作样，似乎他们已经不关心自身的利益，只是为了被剥削的工人阶级的利益才去写对资产阶级的控诉书。他们用来泄愤的手段是：唱唱诅咒他们的新统治者的歌，并向他叽叽咕咕地说一些或多或少凶险的预言。 这样就产生了封建的社会主义，半是挽歌，半是谤文，半是过去的回音，半是未来的恫吓；它有时也能用辛辣、俏皮而尖刻的评论剌中资产阶级的心，但是它由于完全不能理解现代历史的进程而总是令人感到可笑。 为了拉拢人民，贵族们把无产阶级的乞食袋当作旗帜来挥舞。但是，每当人民跟着他们走的时候，都发现他们的臀部带有旧的封建纹章，于是就哈哈大笑，一哄而散。 一部分法国正统派和“青年英国”，都演过这出戏。 封建主说，他们的剥削方式和资产阶级的剥削不同，那他们只是忘记了，他们是在完全不同的、目前已经过时的情况和条件下进行剥削的。他们说，在他们的统治下并没有出现过现代的无产阶级，那他们只是忘记了，现代的资产阶级正是他们的社会制度的必然产物。 不过，他们毫不掩饰自己的批评的反动性质，他们控告资产阶级的主要罪状正是在于：在资产阶级的统治下有一个将把整个旧社会制度炸毁的阶级发展起来。 他们责备资产阶级，与其说是因为它产生了无产阶级，不如说是因为它产生了革命的无产阶级。 因此，在政治实践中，他们参与对工人阶级采取的一切暴力措施，在日常生活中，他们违背自己的那一套冠冕堂皇的言词，屈尊拾取金苹果，不顾信义、仁爱和名誉去做羊毛、甜菜和烧酒的买卖。 正如僧侣总是同封建主携手同行一样，僧侣的社会主义也总是同封建的社会主义携手同行的。 要给基督教禁欲主义涂上一层社会主义的色彩，是再容易不过了。基督教不是也激烈反对私有财产，反对婚姻，反对国家吗？它不是提倡用行善和求乞、独身和禁欲、修道和礼拜来代替这一切吗？基督教的社会主义，只不过是僧侣用来使贵族的怨愤神圣的圣水罢了。 （乙）小资产阶级的社会主义封建贵族并不是被资产阶级所推翻的、其生活条件在现代资产阶级社会里日益恶化和消失的唯一阶级。中世纪的城关市民和小农等级是现代资产阶级的前身。在工商业不很发达的国家里，这个阶级还在新兴的资产阶级身旁勉强生存着。 在现代文明已经发展的国家里，形成了一个新的小资产阶级，它摇摆于无产阶级和资产阶级之间，并且作为资产阶级社会的补充部分不断地重新组成。但是，这一阶级的成员经常被竞争抛到无产阶级队伍里去，而且，随着大工业的发展，他们甚至觉察到，他们很快就会完全失去他们作为现代社会中一个独立部分的地位，在商业、工业和农业中很快就会被监工和雇员所代替。 在农民阶级远远超过人口半数的国家，例如在法国，那些站在无产阶级方面反对资产阶级的著作家，自然是用小资产阶级和小农的尺度去批判资产阶级制度的，是从小资产阶级的立场出发替工人说话的。这样就形成了小资产阶级的社会主义。西斯蒙第不仅对法国而且对英国来说都是这类著作家的首领。 这种社会主义非常透彻地分析了现代生产关系中的矛盾。它揭穿了经济学家的虚伪的粉饰。它确凿地证明了机器和分工的破坏作用、资本和地产的积聚、生产过剩、危机、小资产者和小农的必然没落、无产阶级的贫困、生产的无政府状态、财富分配的极不平均、各民族之间的毁灭性的工业战争，以及旧风尚、旧家庭关系和旧民族性的解体。 但是，这种社会主义按其实际内容来说，或者是企图恢复旧的生产资料和交换手段，从而恢复旧的所有制关系和旧的社会，或者是企图重新把现代的生产资料和交换手段硬塞到已被它们突破而且必然被突破的旧的所有制关系的框子里去。它在这两种场合都是反动的，同时又是空想的。 工业中的行会制度，农业中的宗法经济，——这就是它的结论。 这一思潮在它以后的发展中变成了一种怯懦的悲叹。 （丙）德国的或“真正的”社会主义法国的社会主义和共产主义的文献是在居于统治地位的资产阶级的压迫下产生的，并且是同这种统治作斗争的文字表现，这种文献被搬到德国的时候，那里的资产阶级才刚刚开始进行反对封建专制制度的斗争。 德国的哲学家、半哲学家和美文学家，贪婪地抓住了这种文献，不过他们忘记了：在这种著作从法国搬到德国的时候，法国的生活条件却没有同时搬过去。在德国的条件下，法国的文献完全失去了直接实践的意义，而只具有纯粹文献的形式。它必然表现为关于真正的社会、关于实现人的本质的无谓思辨。这样，第一次法国革命的要求，在18世纪的德国哲学家看来，不过是一般“实践理性”的要求，而革命的法国资产阶级的意志的表现，在他们心目中就是纯粹的意志、本来的意志、真正人的意志的规律。 德国著作家的唯一工作，就是把新的法国的思想同他们的旧的哲学信仰调和起来，或者毋宁说，就是从他们的哲学观点出发去掌握法国的思想。 这种掌握，就像掌握外国语一样，是通过翻译的。 大家知道，僧侣们曾经在古代异教经典的手抄本上面写上荒诞的天主教圣徒传。德国著作家对世俗的法国文献采取相反的作法。他们在法国的原著下面写上自己的哲学胡说。例如，他们在法国人对货币关系的批判下面写上“人的本质的外化”，在法国人对资产阶级国家的批判下面写上所谓“抽象普遍物的统治的扬弃”，等等。 这种在法国人的论述下面塞进自己哲学词句的做法，他们称之为“行动的哲学”、”真正的社会主义”、“德国的社会主义科学”、“社会主义的哲学论证”，等等。 法国的社会主义和共产主义的文献就这样被完全阉割了。既然这种文献在德国人手里已不再表现一个阶级反对另一个阶级的斗争，于是德国人就认为：他们克服了“法国人的片面性”，他们不代表真实的要求，而代表真理的要求，不代表无产者的利益，而代表人的本质的利益，即一般人的利益，这种人不属于任何阶级，根本不存在于现实界，而只存在于云雾弥漫的哲学幻想的太空。 这种曾经郑重其事地看待自己那一套拙劣的小学生作业并且大言不惭地加以吹嘘的德国社会主义，现在渐渐失去了它的自炫博学的天真。 德国的特别是普鲁士的资产阶级反对封建主和专制王朝的斗争，一句话，自由主义运动，越来越严重了。 于是，“真正的”社会主义就得到了一个好机会，把社会主义的要求同政治运动对立起来，用诅咒异端邪说的传统办法诅咒自由主义，诅咒代议制国家，诅咒资产阶级的竞争、资产阶级的新闻出版自由、资产阶级的法、资产阶级的自由和平等，并且向人民群众大肆宣扬，说什么在这个资产阶级运动中，人民群众非但一无所得，反而会失去一切。德国的社会主义恰好忘记了，法国的批判（德国的社会主义是这种批判的可怜的回声）是以现代的资产阶级社会以及相应的物质生活条件和相当的政治制度为前提的，而这一切前提当时在德国正是尚待争取的。 这种社会主义成了德意志各邦专制政府及其随从——僧侣、教员、容克和官僚求之不得的、吓唬来势汹汹的资产阶级的稻草人。 这种社会主义是这些政府用来镇压德国工人起义的毒辣的皮鞭和枪弹的甜蜜的补充。 既然“真正的”社会主义就这样成了这些政府对付德国资产阶级的武器，那么它也就直接代表了一种反动的利益，即德国小市民的利益。在德国，16世纪遗留下来的、从那时起经常以不同形式重新出现的小资产阶级，是现存制度的真实的社会基础。 保存这个小资产阶级，就是保存德国的现存制度。这个阶级胆战心惊地从资产阶级的工业统治和政治统治那里等候着无可幸免的灭亡，这一方面是由于资本的积聚，另一方面是由于革命无产阶级的兴起。在它看来，“真正的”社会主义能起一箭双雕的作用。“真正的”社会主义像瘟疫一样流行起来了。 德国的社会主义者给自己的那几条干瘪的“永恒真理”披上一件用思辨的蛛丝织成的、绣满华丽辞藻的花朵和浸透甜情蜜意的甘露的外衣，这件光彩夺目的外衣只是使他们的货物在这些顾客中间增加销路罢了。 同时，德国的社会主义也越来越认识到自己的使命就是充当这种小市民的夸夸其谈的代言人。 它宣布德意志民族是模范的民族，德国小市民是模范的人。它给这些小市民的每一种丑行都加上奥秘的、高尚的、社会主义的意义，使之变成完全相反的东西。它发展到最后，就直接反对共产主义的“野蛮破坏的”倾向，并且宣布自己是不偏不倚地超乎任何阶级斗争之上的。现今在德国流行的一切所谓社会主义和共产主义的著作，除了极少数的例外，都属于这一类卑鄙龌龊的、令人委靡的文献。 2、保守的或资产阶级的社会主义资产阶级中的一部分人想要消除社会的弊病，以便保障资产阶级社会的生存。 这一部分人包括：经济学家、博爱主义者、人道主义者、劳动阶级状况改善派、慈善事业组织者、动物保护协会会员、戒酒协会发起人以及形形色色的小改良家。这种资产阶级的社会主义甚至被制成一些完整的体系。 我们可以举蒲鲁东的《贫困的哲学》作为例子。 社会主义的资产者愿意要现代社会的生存条件，但是不要由这些条件必然产生的斗争和危险。他们愿意要现存的社会，但是不要那些使这个社会革命化和瓦解的因素。他们愿意要资产阶级，但是不要无产阶级。在资产阶级看来，它所统治的世界自然是最美好的世界。资产阶级的社会主义把这种安慰人心的观念制成半套或整套的体系。它要求无产阶级实现它的体系，走进新的耶路撒冷，其实它不过是要求无产阶级停留在现今的社会里，但是要抛弃他们关于这个社会的可恶的观念。 这种社会主义的另一种不够系统、但是比较实际的形式，力图使工人阶级厌弃一切革命运动，硬说能给工人阶级带来好处的并不是这样或那样的政治改革，而仅仅是物质生活条件即经济关系的改变。但是，这种社会主义所理解的物质生活条件的改变，绝对不是只有通过革命的途径才能实现的资产阶级生产关系的废除，而是一些在这种生产关系的基础上实行的行政上的改良，因而丝毫不会改变资本和雇佣劳动的关系，至多只能减少资产阶级的统治费用和简化它的财政管理。 资产阶级的社会主义只有在它变成纯粹的演说辞令的时候，才获得自己的适当的表现。 自由贸易！为了工人阶级的利益；保护关税！为了工人阶级的利益；单身牢房！为了工人阶级的利益。——这才是资产阶级的社会主义唯一认真说出的最后的话。 资产阶级的社会主义就是这样一个论断：资产者之为资产者，是为了工人阶级的利益。 3、批判的空想的社会主义和共产主义在这里，我们不谈在现代一切大革命中表达过无产阶级要求的文献（巴贝夫等人的著作）。 无产阶级在普遍激动的时代、在推翻封建社会的时期直接实现自己阶级利益的最初尝试，都不可避免地遭到了失败，这是由于当时无产阶级本身还不够发展，由于无产阶级解放的物质条件还没具备，这些条件只是资产阶级时代的产物。随着这些早期的无产阶级运动而出现的革命文献，就其内容来说必然是反动的。这种文献倡导普遍的禁欲主义和粗陋的平均主义。 本来意义的社会主义和共产主义的体系，圣西门、傅立叶、欧文等人的体系，是在无产阶级和资产阶级之间的斗争还不发展的最初时期出现的。关于这个时期，我们在前面已经叙述过了（见《资产阶级和无产阶级》）。 诚然，这些体系的发明家看到了阶级的对立，以及占统治地位的社会本身中的瓦解因素的作用。但是，他们看不到无产阶级方面的任何历史主动性，看不到它所特有的任何政治运动。 由于阶级对立的发展是同工业的发展步调一致的，所以这些发明家也不可能看到无产阶级解放的物质条件，于是他们就去探求某种社会科学、社会规律，以便创造这些条件。 社会的活动要由他们个人的发明活动来代替，解放的历史条件要由幻想的条件来代替，无产阶级的逐步组织成为阶级要由一种特意设计出来的社会组织来代替。在他们看来，今后的世界历史不过是宣传和实施他们的社会计划。 诚然，他们也意识到，他们的计划主要是代表工人阶级这一受苦最深的阶级的利益。在他们心目中，无产阶级只是一个受苦最深的阶级。 但是，由于阶级斗争不发展，由于他们本身的生活状况，他们就以为自己是高高超乎这种阶级对立之上的。他们要改善社会一切成员的生活状况，甚至生活最优裕的成员也包括在内。因此，他们总是不加区别地向整个社会呼吁，而且主要是向统治阶级呼吁。他们以为，人们只要理解他们的体系，就会承认这种体系是最美好的社会的最美好的计划。 因此，他们拒绝一切政治行动，特别是一切革命行动；他们想通过和平的途径达到自己的目的，并且企图通过一些小型的、当然不会成功的试验，通过示范的力量来为新的社会福音开辟道路。 这种对未来社会的幻想的描绘，在无产阶级还很不发展、因而对本身的地位的认识还基于幻想的时候，是同无产阶级对社会普遍改造的最初的本能的渴望相适应的。 但是，这些社会主义和共产主义的著作也含有批判的成分。这些著作抨击现存社会的全部基础。因此，它们提供了启发工人觉悟的极为宝贵的材料。它们关于未来社会的积极的主张，例如消灭城乡对立，消灭家庭，消灭私人营利，消灭雇佣劳动，提倡社会和谐，把国家变成纯粹的生产管理机构，——所有这些主张都只是表明要消灭阶级对立，而这种阶级对立在当时刚刚开始发展，它们所知道的只是这种对立的早期的、不明显的、不确定的形式。因此，这些主张本身还带有纯粹空想的性质。 批判的空想的社会主义和共产主义的意义，是同历史的发展成反比的。阶级斗争越发展和越具有确定的形式，这种超乎阶级斗争的幻想，这种反对阶级斗争的幻想，就越失去任何实践意义和任何理论根据。所以，虽然这些体系的创始人在许多方面是革命的，但是他们的信徒总是组成一些反动的宗派。这些信徒无视无产阶级的历史进展，还是死守着老师们的旧观点。因此，他们一贯企图削弱阶级斗争，调和对立。他们还总是梦想用试验的办法来实现自己的社会空想，创办单个的法伦斯泰尔，建立国内移民区，创立小伊加利亚，即袖珍版的新耶路撒冷，——而为了建造这一切空中楼阁，他们就不得不呼吁资产阶级发善心和慷慨解囊。他们逐渐地堕落到上述反动的或保守的社会主义者的一伙中去了，所不同的只是他们更加系统地卖弄学问，狂热地迷信自己那一套社会科学的奇功异效。 因此，他们激烈地反对工人的一切政治运动，认为这种运动只是由于盲目地不相信新福音才发生的。 在英国，有欧文主义者反对宪章派，在法国，有傅立叶主义者反对改革派。 四、共产党人对各种反对党派的态度看过第二章之后，就可以了解共产党人同已经形成的工人政党的关系，因而也就可以了解他们同英国宪章派和北美土地改革派的关系。 共产党人为工人阶级的最近的目的和利益而斗争，但是他们在当前的运动中同时代表运动的未来。在法国，共产党人同社会主义民主党联合起来反对保守的和激进的资产阶级，但是并不因此放弃对那些从革命的传统中承袭下来的空谈和幻想采取批判态度的权利。 在瑞士，共产党人支持激进派，但是并不忽略这个政党是由互相矛盾的分子组成的，其中一部分是法国式的民主社会主义者，一部分是激进的资产者。 在波兰人中间，共产党人支持那个把土地革命当作民族解放的条件的政党，即发动过1846年克拉科夫起义的政党。 在德国，只要资产阶级采取革命的行动，共产党就同它一起去反对专制君主制、封建土地所有制和小市民的反动性。 但是，共产党一分钟也不忽略教育工人尽可能明确地意识到资产阶级和无产阶级的敌对的对立，以便德国工人能够立刻利用资产阶级统治所必然带来的社会的和政治的条件作为反对资产阶级的武器，以便在推翻德国的反动阶级之后立即开始反对资产阶级本身的斗争。 共产党人把自己的主要注意力集中在德国，因为德国正处在资产阶级革命的前夜，因为同17世纪的英国和18世纪的法国相比，德国将在整个欧洲文明更进步的条件下，拥有发展得多的无产阶级去实现这个变革，因而德国的资产阶级革命只能是无产阶级革命的直接序幕。 总之，共产党人到处都支持一切反对现存的社会制度和政治制度的革命运动。 在所有这些运动中，他们都强调所有制问题是运动的基本问题，不管这个问题的发展程度怎样。 最后，共产党人到处都努力争取全世界民主政党之间的团结和协调。 共产党人不屑于隐瞒自己的观点和意图。他们公开宣布：他们的目的只有用暴力推翻全部现存的社会制度才能达到。让统治阶级在共产主义革命面前发抖吧。无产者在这个革命中失去的只是锁链。他们获得的将是整个世界。 全世界无产者，联合起来！","categories":[{"name":"思想","slug":"思想","permalink":"https://blog.darkcrane.com/categories/%E6%80%9D%E6%83%B3/"}],"tags":[{"name":"思想","slug":"思想","permalink":"https://blog.darkcrane.com/tags/%E6%80%9D%E6%83%B3/"},{"name":"共产党宣言","slug":"共产党宣言","permalink":"https://blog.darkcrane.com/tags/%E5%85%B1%E4%BA%A7%E5%85%9A%E5%AE%A3%E8%A8%80/"}]},{"title":"Javaweb文件上传路径兼容问题","slug":"Javaweb文件上传路径兼容问题","date":"2020-04-25T09:00:20.000Z","updated":"2020-04-25T09:00:20.000Z","comments":true,"path":"posts/9969daf0/","link":"","permalink":"https://blog.darkcrane.com/posts/9969daf0/","excerpt":"最近写Javaweb项目时遇到了一个坑，本地服务器进行测试时没有什么异常，但将war包部署到服务器上并进行文件上传时遇到了一些问题：文件上传后找不到。","text":"最近写Javaweb项目时遇到了一个坑，本地服务器进行测试时没有什么异常，但将war包部署到服务器上并进行文件上传时遇到了一些问题：文件上传后找不到。 仔细检查后我发现原本准备上传至WEB-INF\\aaa文件夹下的文件直接在主目录下生成了以文件夹命名的文件。 原来是因为Windows下的路径用反斜杠“\\”表示，而Linux下的路径用斜杠“/”表示，而我的所有路径分隔符都是是用反斜杠表示才产生了这种问题； 为了解决这个问题可以把“\\”全部换成“/”，但这样做的话Windows下又会出现问题。 为了兼容性考虑Java提供了一个方法File.separator能根据系统的不同获取文件路径的分隔符。将用到分隔符的地方全部替换为File.separator，测试成功。 完结，撒花！！","categories":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"Javaweb","slug":"学习/Javaweb","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/Javaweb/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"File","slug":"File","permalink":"https://blog.darkcrane.com/tags/File/"},{"name":"Javaweb","slug":"Javaweb","permalink":"https://blog.darkcrane.com/tags/Javaweb/"},{"name":"Java","slug":"Java","permalink":"https://blog.darkcrane.com/tags/Java/"},{"name":"坑","slug":"坑","permalink":"https://blog.darkcrane.com/tags/%E5%9D%91/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.darkcrane.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://blog.darkcrane.com/tags/Windows/"}]},{"title":"免安装脚本使用B站动态头像教程（已失效）","slug":"免安装脚本使用B站动态头像教程","date":"2020-04-14T14:22:05.000Z","updated":"2020-04-14T14:22:05.000Z","comments":true,"path":"posts/f6f15960/","link":"","permalink":"https://blog.darkcrane.com/posts/f6f15960/","excerpt":"动态头像要求 准备180x180像素尺寸的动画图片、APNG或者Webp格式、体积1.2MB以下 使用以下列出的任何一种浏览器：","text":"动态头像要求 准备180x180像素尺寸的动画图片、APNG或者Webp格式、体积1.2MB以下 使用以下列出的任何一种浏览器： 1.Chrome 2.Firefox 3.Edge 4.国产浏览器极速模式 添加代码到收藏书签 新建收藏书签 随便添加一个网站到收藏书签、编辑收藏书签 书签名称随便写 书签网址：把以下代码粘贴替换到网址栏里 保存 1javascript:void(()=&gt;&#123;var mj=document.createElement(&#x27;script&#x27;);mj.src=&#x27;https://cdn.jsdelivr.net/gh/youhua38tao/CDN/js/bilipic.js&#x27;;document.getElementsByTagName(&#x27;head&#x27;)[0].appendChild(mj);&#125;)(); 到上传头像的页面运行脚本 打开B站头像上传设置页面 点击刚才做好的收藏书签 等待几秒钟出现一个新的按钮就可以更换动画头像了！ 关于Webp格式个人页面上不显示头像如何显示？ 由于B站对Webp图片地址转换错误、导致个人页面的头像图片地址错误而不能正常显示 这时候只要再点一下书签的脚本、等几秒后就能看到了 这是脚本帮你修复了个人页面头像的图片地址才显示出来的、作用只有自己看效果而已、没有实际上的修复 因为是B站的问题、所以没办法只用脚本就能根本修复","categories":[{"name":"工具","slug":"工具","permalink":"https://blog.darkcrane.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://blog.darkcrane.com/tags/%E5%B7%A5%E5%85%B7/"},{"name":"脚本","slug":"脚本","permalink":"https://blog.darkcrane.com/tags/%E8%84%9A%E6%9C%AC/"},{"name":"折腾","slug":"折腾","permalink":"https://blog.darkcrane.com/tags/%E6%8A%98%E8%85%BE/"},{"name":"b站","slug":"b站","permalink":"https://blog.darkcrane.com/tags/b%E7%AB%99/"},{"name":"bilbili","slug":"bilbili","permalink":"https://blog.darkcrane.com/tags/bilbili/"},{"name":"哔哩哔哩","slug":"哔哩哔哩","permalink":"https://blog.darkcrane.com/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/"},{"name":"头像","slug":"头像","permalink":"https://blog.darkcrane.com/tags/%E5%A4%B4%E5%83%8F/"}]},{"title":"Android Fragment","slug":"Android Fragment","date":"2020-03-15T09:00:20.000Z","updated":"2020-03-15T09:00:20.000Z","comments":true,"path":"posts/f0626deb/","link":"","permalink":"https://blog.darkcrane.com/posts/f0626deb/","excerpt":"基本概念你可以简单的理解为，Fragment是显示在Activity中的Activity。它可以显示在Activity中，然后它也可以显示出一些内容。因为它拥有自己的生命周期，可以接受处理用户的事件，并且你可以在一个Activity中动态的添加，替换，移除不同的Fragment，因此对于信息的展示具有很大的便利性","text":"基本概念你可以简单的理解为，Fragment是显示在Activity中的Activity。它可以显示在Activity中，然后它也可以显示出一些内容。因为它拥有自己的生命周期，可以接受处理用户的事件，并且你可以在一个Activity中动态的添加，替换，移除不同的Fragment，因此对于信息的展示具有很大的便利性 Fragment，简称碎片，是Android 3.0（API 11）提出的，为了兼容低版本，support-v4库中也开发了一套Fragment API，最低兼容Android 1.6。 过去support-v4库是一个jar包，24.2.0版本开始，将support-v4库模块化为多个jar包，包含：support-fragment, support-ui, support-media-compat等，这么做是为了减少APK包大小，你需要用哪个模块就引入哪个模块。 如果想引入整个support-v4库，则compile &#39;com.android.support:support-v4:24.2.1，如果只想引入support-fragment库，则com.android.support:support-fragment:24.2.1。 因为support库是不断更新的，因此建议使用support库中的android.support.v4.app.Fragment，而不要用系统自带的android.app.Fragment。而如果要使用support库的Fragment，Activity必须要继承FragmentActivity（AppCompatActivity是FragmentActivity的子类）。 Fragment是依赖于Activity的，不能独立存在的。 一个Activity里可以有多个Fragment。 一个Fragment可以被多个Activity重用。 Fragment有自己的生命周期，并能接收输入事件。 我们能在Activity运行时动态地添加或删除Fragment。 Fragment优点 模块化（Modularity）：我们不必把所有代码全部写在Activity中，而是把代码写在各自的Fragment中。 可重用（Reusability）：多个Activity可以重用一个Fragment。 可适配（Adaptability）：根据硬件的屏幕尺寸、屏幕方向，能够方便地实现不同的布局，这样用户体验更好。 Fragment的生命周期因为Fragment是依附于Activity存在的，因此它的生命周期收到Activity的生命周期影响。Fragment比Activity多了几个生命周期的回调方法。 onAttach(Activity)： 当Fragment与Activity发生关联的时候调用 onCreateView(LayoutInflater, ViewGroup, Bundle)： 创建该Fragment的视图 onActivityCreated(Bundle)： 当Activity的onCreated方法返回时调用 onDestroyView() 与onCreateView方法相对应，当该Fragment的视图被移除时调用 onDetach() 与onAttach方法相对应，当Fragment与Activity取消关联时调用 PS：注意：除了onCreateView，其他的所有方法如果你重写了，必须调用父类对于该方法的实现 Fragment的创建和使用1234567891011121314151617181920212223242526272829303132333435363738public class FirstFragment extends Fragment &#123; @Nullable //创建加载布局文件 @Override public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) &#123; Log.d(&quot;onCreateView&quot;,&quot;onCreateView被执行&quot;); View view=inflater.inflate(R.layout.activity_first_fragment,container,false); return view; &#125; //布局已经加载完成 @Override public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) &#123; Log.d(&quot;onViewCreated&quot;,&quot;onViewCreated被执行&quot;); super.onViewCreated(view, savedInstanceState); //通过view.findViewById()，可以获取fragment控件 &#125; @Override public void onDetach() &#123; super.onDetach(); Log.d(&quot;onDetach&quot;,&quot;onDetach被执行&quot;); &#125; @Override public void onAttach(@NonNull Context context) &#123; super.onAttach(context); Log.d(&quot;onAttach&quot;,&quot;onAttach被执行&quot;); &#125; @Override public void onDestroyView() &#123; super.onDestroyView(); Log.d(&quot;onDestroyView&quot;,&quot;onDestroyView被执行&quot;); &#125;&#125; 123456789101112131415161718192021222324252627282930public class FragmentActivity extends AppCompatActivity &#123; private Button btn_change; private FirstFragment firstFragment;//创建FirstFragment对象 private SecondFragment secondFragment; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_fragment); btn_change=(Button) findViewById(R.id.btn_change); firstFragment=new FirstFragment(); //在当前的FragmengActivity添加显示fragment getSupportFragmentManager().beginTransaction().add(R.id.fl, firstFragment).commitAllowingStateLoss(); //添加点击事件，用来切换不同的Fragment btn_change.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; if(secondFragment==null) &#123; secondFragment = new SecondFragment(); firstFragment=null; &#125; getSupportFragmentManager().beginTransaction().replace(R.id.fl, secondFragment).addToBackStack(null).commitAllowingStateLoss(); &#125; &#125;); &#125;&#125; 要点什么是Fragment的回退栈？【重要】 Fragment的回退栈是用来保存每一次Fragment事务发生的变化 如果你将Fragment任务添加到回退栈，当用户点击后退按钮时，将看到上一次的保存 Fragment。一旦Fragment完全从后退栈中弹出，用户再次点击后退键，则退出当前Activity。 Fragment与Activity之间的通信【难点】Fragment依附于Activity存在，因此与Activity之间的通信可以归纳为以下几点：① 如果你Activity中包含自己管理的Fragment的引用，可以通过引用直接访问所有的Fragment的public方法。② 如果Activity中未保存任何Fragment的引用，那么没关系，每个Fragment都有一个唯一的TAG或者ID,可以通过getFragmentManager.findFragmentByTag()或者findFragmentById()获得任何Fragment实例，然后进行操作。③ Fragment中可以通过getActivity得到当前绑定的Activity的实例，然后进行操作。","categories":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"Android","slug":"学习/Android","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/Android/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"Android","slug":"Android","permalink":"https://blog.darkcrane.com/tags/Android/"},{"name":"Fragment","slug":"Fragment","permalink":"https://blog.darkcrane.com/tags/Fragment/"},{"name":"Android碎片","slug":"Android碎片","permalink":"https://blog.darkcrane.com/tags/Android%E7%A2%8E%E7%89%87/"}]},{"title":"Android 数据存储","slug":"Android 数据存储","date":"2020-03-15T09:00:20.000Z","updated":"2020-03-15T09:00:20.000Z","comments":true,"path":"posts/867b5518/","link":"","permalink":"https://blog.darkcrane.com/posts/867b5518/","excerpt":"","text":"Android系统提供了四种存储数据方式。分别为：SharePreferences、SQLite、Content Provider和File。但由于Android系统中，数据基本是私有的，都是存放于”data/data”程序包名目录下，所以要实现数据共享，正确方式是使用Content Provider 一 、SharePreferences：轻量级数据存储 SharedPreferences是一种数据存储方式，用来存储一些简单的信息，位于android.content包中，以键值对的模式进行存储，键值对（key-value）。对于存储的基本信息，如int,string,boolean,float和long。 获取方式： 使用getSharedPreferences()方法获取 使用getPreferences()方法获取 实现SharedPreferences存储步骤： 调用SharedPreferences类的edit()方法，获取SharedPreferences.Editor对象 调用一个SharedPreferences.Editor对象的putXXX()的方法获取数据 使用commit()方法提交数据 123456789101112131415161718192021222324252627282930313233343536373839public class DataActivity extends AppCompatActivity &#123; private EditText editText; private Button btn_save; private Button btn_show; private TextView textView; private SharedPreferences sharedPreferences;//读操作 private SharedPreferences.Editor editor;//写操作 @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_data); editText=findViewById(R.id.et1); btn_save=findViewById(R.id.btn_save); btn_show=findViewById(R.id.btn_show); textView=findViewById(R.id.tv1); sharedPreferences=this.getSharedPreferences(&quot;ludainkai&quot;,MODE_PRIVATE); editor= sharedPreferences.edit(); //读取保存 btn_save.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; editor.putString(&quot;tag&quot;,editText.getText().toString()); editor.commit();//或者使用apply() &#125; &#125;); //显示操作 btn_show.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; textView.setText(sharedPreferences.getString(&quot;tag&quot;,&quot;&quot;)); &#125; &#125;); &#125;&#125; 使用SharePreferences读写数据，最终生成 的文件 目录：/data/data//shared_prefs 二、File 存储 文件存储是Android中最基本的一种存储方式，和Java中实现I/O的方式，由Context类提供openFileInput()和openFileOutput()方法打开。文件存储主要分两种存储，一种是内部存储，一种是外部存储。内存存储(Internal Storage)：使用了FileInputStream类中的openFileInput()方法，用于读取数据；使用了FileOutputStream类中的openFileOutput()方法，用于写入数据。外部存储(External Storage)：使用Enviroment类中的getExternalStorageDirectory()方法对外部存储上的文件进行读写。 简化： FileOutputStream -&gt; openFileOutput() FileInputStream -&gt; openFileInput() Environment -&gt; getExternalStorageDirectory() 一，内部存储的写入文件步骤 获取文件输出流对象 FileOutputStream 使用FileOutputStream类的openFileOutput(String name, int mode)方法 调用FileOutputStream对象的write()方法写入文件 调用flush()方法，因为write()方法是写入缓冲区的，调用flush()方法将缓冲中的数据写入到文件，清空缓存 close()方法用于关闭FileOutputStream 二，内部存储的读取文件步骤 获取文件输入流对象 FileInputStream 使用FileInputStream类的openFileInput()方法来实现 调用FileInputStream对象的read()方法 调用close()关闭文件输入流对象 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071public class FileActivity extends AppCompatActivity &#123; private Button btn_save; private Button btn_show; private TextView textView; private EditText editText; @Override protected void onCreate(final Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_file); editText=findViewById(R.id.et1); btn_save=findViewById(R.id.btn_save); btn_show=findViewById(R.id.btn_show); textView=findViewById(R.id.tv1); //将数据保存在文件 btn_save.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; String str=editText.getText().toString(); fileSave(str); &#125; &#125;); //读文件 btn_show.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; String str=fileRead(); textView.setText(str); &#125; &#125;); &#125; //封装一个方法将从控件的内容写到文件中 public void fileSave(String str)&#123; FileOutputStream fileOutputStream=null; try &#123; fileOutputStream=openFileOutput(&quot;day11.txt&quot;,MODE_PRIVATE); fileOutputStream.write(str.getBytes()); fileOutputStream.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; //封装一个方法将从文件的内容读到控件中 public String fileRead()&#123; FileInputStream fileInputStream=null; try &#123; fileInputStream=openFileInput(&quot;day11.txt&quot;); byte[] bytes=new byte[1024]; StringBuffer sb=new StringBuffer(&quot;&quot;); int len=0; while((len=fileInputStream.read(bytes))&gt;0)&#123; sb.append(new String(bytes,0,len)); &#125; return sb.toString(); &#125; catch (FileNotFoundException e) &#123; e.printStackTrace(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; return null; &#125;&#125; 三、Sqlite 轻量级数据库，适合应用移动端数据存储 SQLite是一款轻量级的关系型数据库，它的运算很快，占用空间小，SQLite不仅有SQL语法支持，独立，还有数据库的ACID事务，SQLite数据库为一种嵌入式数据库。 SQLiteOpenHelper类，它是SQLiteDatabase的帮助类，用于管理数据库的创建和升级，SQLiteOpenHelper类为抽象类，有两个要重写的方法：onCreate()和onUpgrade()，用于去实现创建和升级数据库。 在SQLiteOpenHelper类中还需要一个构造方法，这个方法接收四个参数，分别为Context context，String name，CursorFactory factory，int version这四个。第一个是参数context，第二个是数据库名，第三个是自定义Cursor,一般为null，第四个为当前的数据库版本号。 在SQLiteOpenHelper类中有两个重要的实例方法，为getReadableDatabase()和getWritableDatabase()这两个方法。调用这其中的方法就能够创建数据库了。如果存在数据库就打开，没有就创建。 SQLiteOpenHelper类是一个SQLite帮助类，实现SQLite的数据操作，创建一个类去继SQLiteOpenHelper。 如何使用Sqlite数据库存储数据操作CRUD的操作 使用Sqlite的步骤： 1.编写一个类继承SQLiteOpenHelper2.重写SQLiteOpenHelper 里面的抽象方法3.添加构造方法 123456789101112131415161718192021222324252627282930313233343536373839404142public class DBDataBase extends SQLiteOpenHelper &#123; /*@param context 上下文对象 * @param name 数据库的名称 * @param factory 游标对象 * @param version 数据库的版本 * */ //调整构造函数 public DBDataBase(Context context) &#123; super(context, Constant.DATABASE_NAME, null, Constant.VERSION_CODE); &#125; //这个方法是创建数据库的回调方法 /** * onCreate()方法 就是在第一次创建数据库之后的回调， * @param db */ @Override public void onCreate(SQLiteDatabase db) &#123; Log.d(&quot;onCreate&quot;,&quot;onCreate()被执行&quot;); //创建数据表 String sql=&quot;create table tb_user(id integer ,name varchar(20),password varchar(20),tel varchar(12))&quot;; //创建tb_user db.execSQL(sql); &#125; //这个方法是用来升级数据库的 @Override public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) &#123; Log.d(&quot;onUpgrade&quot;,&quot;onUpgrade()被执行&quot;); //添加表字段的sql语句 String sql=&quot;alter table tb_user add address varchar(100)&quot;; //执行sql语句 db.execSQL(sql); &#125;&#125; 在 启动SqliteActivity时创建数据 1234567891011121314public class SqliteActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_sqlite); //创建数据 DBDataBase helper=new DBDataBase(SqliteActivity.this); //通过helper对象创建数据 SQLiteDatabase db = helper.getWritableDatabase(); &#125;&#125; SQLiteDatabase db = helper.getWritableDatabase(); SQLiteDatabase db = helper.getReaderableDatabase();这两种创建数据库的区别:getReaderableDatabase()方法如果在创建数据库的时候出现异常，会返回一个可写状态的数据库，getWritableDatabase() 据库的时候出现异常 就会抛出异常 向数据库添加数据 insert()方法，参数一表名，参数二是在未指定添加数据的情况下给某些可为空的列自动赋值为NULL，设置为null即可，参数三是ContentValues对象。 1234567SQLiteDatabase db = helper.getWritableDatabase();ContentValues values = new ContentValues();values.put(&quot;name&quot;,&quot;The Book Name&quot;);values.put(&quot;author&quot;,&quot;chen&quot;);values.put(&quot;pages&quot;,100);values.put(&quot;price&quot;,200);db.insert(&quot;Book&quot;,null,values); 更新数据库中的数据 update()方法，参数一是表名，参数二是ContentValues对象，参数三、四是去约束更新某一行或某几行的数据，不指定默认更新所有。 1234SQLiteDatabase db = helper.getWritableDatabase();ContentValues values = new ContentValues();values.put(&quot;price&quot;,120);db.update(&quot;Book&quot;,values,&quot;name= ?&quot;,new String[]&#123;&quot;The Book Name&quot;&#125;); 从数据库中删除数据 delete()方法，参数一是表名，参数二、三是去约束删除某一行或某几行的数据，不指定默认删除所有。 12SQLiteDatabase db = helper.getWritableDatabase();db.delete(&quot;Book&quot;,&quot;pages&gt; ?&quot;,new String[]&#123;&quot;100&quot;&#125;); 查询数据库中的数据 query()方法，参数一是表名，参数二是指定查询哪几列，默认全部，参数三、四是去约束查询某一行或某几行的数据，不指定默认查询所有，参数五是用于指定需要去group by的列，参数六是对group by的数据进一步的过滤，参数七是查询结果的排序方式 1234567891011SQLiteDatabase db = helper.getWritableDatabase();Cursor cursor = db.query(&quot;Book&quot;,null,null,null,null,null,null);if(cursor.moveToFirst())&#123; do&#123; String name = cursor.getString(cursor.getColumnIndex(&quot;name&quot;); String author = cursor.getString(cursor.getColumnIndex(&quot;author&quot;); int pages = cursor.getString(cursor.getColumnIndex(&quot;pages&quot;); double price = cursor.getString(cursor.getColumnIndex(&quot;price&quot;); &#125;while(cursor.moveToNext());&#125;cursor.close(): Cursor游标 使用SQL语句操作数据库 12345678910//添加数据db.execSQL(&quot;insert into Book(name,author,pages,price) values(?,?,?,?) &quot; ,new String[]&#123;&quot;The Book Name&quot;,&quot;chen&quot;,100,20&#125;);//更新数据db.execSQL(&quot;update Book set price = ? where name = ?&quot;,new String[] &#123;&quot;10&quot;,&quot;The Book Name&quot;&#125;);//删除数据db.execSQL(&quot;delete from Book where pages &gt; ?&quot;,new String[]&#123;&quot;100&quot;&#125;);//查询数据db.execSQL(&quot;select * from Book&quot;,null); 使用事务操作 1234567891011SQLiteDatabase db = helper.getWritableDatabase();db.beginTransaction(); //开启事务try&#123; ...... db.insert(&quot;Book&quot;,null,values); db.setTransactionSuccessful(); //事务成功执行&#125;catch(SQLException e)&#123; e.printStackTrace();&#125;finally&#123; db.endTransaction(); //结束事务&#125;","categories":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"Android","slug":"学习/Android","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/Android/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"Android","slug":"Android","permalink":"https://blog.darkcrane.com/tags/Android/"},{"name":"数据存储","slug":"数据存储","permalink":"https://blog.darkcrane.com/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"},{"name":"SharePreferences","slug":"SharePreferences","permalink":"https://blog.darkcrane.com/tags/SharePreferences/"},{"name":"SQLite","slug":"SQLite","permalink":"https://blog.darkcrane.com/tags/SQLite/"},{"name":"File","slug":"File","permalink":"https://blog.darkcrane.com/tags/File/"},{"name":"Content Provider","slug":"Content-Provider","permalink":"https://blog.darkcrane.com/tags/Content-Provider/"}]},{"title":"Android BroadcastReceiver广播","slug":"Android BroadcastReceiver广播","date":"2020-03-15T09:00:20.000Z","updated":"2020-03-15T09:00:20.000Z","comments":true,"path":"posts/9a3e3673/","link":"","permalink":"https://blog.darkcrane.com/posts/9a3e3673/","excerpt":"什么是android中的BroadcastReceiver广播在 Android 系统中，广播（Broadcast）是在组件之间传播数据的一种机制，这些组件可以位于不同的进程中，起到进程间通信的作用","text":"什么是android中的BroadcastReceiver广播在 Android 系统中，广播（Broadcast）是在组件之间传播数据的一种机制，这些组件可以位于不同的进程中，起到进程间通信的作用 BroadcastReceiver 是对发送出来的 Broadcast 进行过滤、接受和响应的组件。首先将要发送的消息和用于过滤的信息（Action，Category）装入一个 Intent 对象，然后通过调用 Context.sendBroadcast() 、 sendOrderBroadcast() 方法把 Intent 对象以广播形式发送出去。 广播发送出去后，所以已注册的 BroadcastReceiver 会检查注册时的 IntentFilter 是否与发送的 Intent 相匹配，若匹配则会调用 BroadcastReceiver 的 onReceiver() 方法 所以当我们定义一个 BroadcastReceiver 的时候，都需要实现 onReceiver() 方法。BroadcastReceiver 的生命周期很短，在执行 onReceiver() 方法时才有效，一旦执行完毕，该Receiver 的生命周期就结束了 广播类型Android中的广播分为两种类型，标准广播和有序广播 标准广播标准广播是一种完全异步执行的广播，在广播发出后所有的广播接收器会在同一时间接收到这条广播，之间没有先后顺序，效率比较高，且无法被截断 有序广播有序广播是一种同步执行的广播，在广播发出后同一时刻只有一个广播接收器能够接收到， 优先级高的广播接收器会优先接收，当优先级高的广播接收器的 onReceiver() 方法运行结束后，广播才会继续传递，且前面的广播接收器可以选择调用 abortBroadcast()方法截断广播，这样后面的广播接收器就无法接收到这条广播了 一般广播 有序广播 多人接收时是否有序 无序，都会同时执行 有序，依据优先级和注册先后顺序依次执行 是否可以中断 不可以 可以，调用了abortBroadcas()方法中断，后面的接收器就接收不了此广播 如何发送广播发送标准广播发送标准广播调用的是 sendBroadcast(Intent) 方法 1234567891011btnNormal.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; //指定action 就是要发送的广播频道 Intent intent=new Intent(&quot;app.com.cn&quot;); //在发送广播的时候，向广播接收者发送数据 intent.putExtra(&quot;name&quot;,&quot;大数据.JAVA.Android&quot;); //下面这句代码执行广播的发送 sendBroadcast(intent); &#125;&#125;); 发送有序广播发送有序广播调用的是 sendOrderedBroadcast(Intent , String)方法，String 参数值在自定义权限时使用 12345678btnOrder.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; Intent intent=new Intent(&quot;app.com.cn&quot;); //发送有序广播 sendOrderedBroadcast(intent,null); &#125;&#125;); 如何编写一个广播接收器 写一个类继承于BroadCastReceiver 重写 onReceive()方法 要注册广播 （静态注册、动态注册） 12345678910111213public class MyBroadCastReceiver1 extends BroadcastReceiver &#123; public MyBroadCastReceiver1()&#123; Log.d(&quot;MyBroadCastReceiver1&quot;,&quot;MyBroadCastReceiver1构造方法被执行&quot;); &#125; //这个方法是广播接收器接收到某个广播之后的回调方法 @Override public void onReceive(Context context, Intent intent) &#123; String name=intent.getStringExtra(&quot;name&quot;); Log.d(&quot;onReceive&quot;,&quot;onReceive()被执行：&quot;+name); &#125;&#125; 123456789101112131415161718192021public class OrderReceiver_1 extends BroadcastReceiver &#123; private final String TAG = &quot;OrderReceiver_1&quot;; public OrderReceiver_1() &#123; &#125; @Override public void onReceive(Context context, Intent intent) &#123; Log.e(TAG, &quot;OrderReceiver_1被调用了&quot;); //取出Intent当中传递来的数据 String msg = intent.getStringExtra(&quot;Msg&quot;); Log.e(TAG, &quot;OrderReceiver_1接收到的值： &quot; + msg); //向下一优先级的Receiver传递数据 Bundle bundle = new Bundle(); bundle.putString(&quot;Data&quot;, &quot;（Hello）&quot;); setResultExtras(bundle); &#125;&#125; 广播接收器的注册方式凡是要接收广播的接收者，必须要进行注册： BroadCastReceiver (广播接收器)，广播在注册方式上可以分为动态注册和静态注册两种方式。静态注册即在清单文件中为 BroadcastReceiver 进行注册，使用**&lt; receiver &gt;标签声明，并在标签内用 **&lt; intent-filter &gt; 标签设置过滤器。这种形式的 BroadcastReceiver 的生命周期伴随着整个应用，如果这种方式处理的是系统广播，那么不管应用是否在运行，该广播接收器都能接收到该广播 动态注册：指的是在程序代码中进行广播注册的过程 静态注册：在AndroidManifest.xml文件进行注册，注册类 静态注册 动态注册 注册方式 配置文件（Androidmanifest.xml） java代码执行 注册时间 应用安装成功/手机开机完成 执行registerReceiver(reveiver,intent)注册时创建对象 生命结束的时间（解注册） 应用卸载（对象执行完onReceiver之后就回收） 执行unregisterReceiver(receiver),注意activity退出以后必须解注册，解注册后对象被回收 应用情景 需要监听的时间为整个应用分的生命周期时间 只服务于某个Activity或者Service 静态注册在清单文件中注册 BroadcastReceiver 在清单文件中声明的 BroadcastReceiver ，必须包含值为 NORMAL_ACTION 字符串的 action 属性，该广播接收器才能收到以下代码中发出的广播 12345&lt;receiver android:name=&quot;.NormalReceiver&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;app.com.cn&quot; /&gt; &lt;/intent-filter&gt;&lt;/receiver&gt; 注册广播优先级的配置： 在清单文件中对三个 Receiver 进行注册，指定相同的 action 属性值，Receiver 之间的优先级使用 priority 属性来判定，数值越大，优先级越高 1234567891011121314151617 &lt;receiver android:name=&quot;.MyBroadCastReceiver1&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;app.com.cn&quot;&gt;&lt;/action&gt; &lt;/intent-filter&gt;&lt;/receiver&gt; &lt;receiver android:name=&quot;.MyBroadCastReceiver3&quot; &gt; &lt;intent-filter android:priority=&quot;2000000&quot;&gt; &lt;action android:name=&quot;app.com.cn&quot; &gt;&lt;/action&gt; &lt;/intent-filter&gt; &lt;/receiver&gt; &lt;receiver android:name=&quot;.MyBroadCastReceiver4&quot; &gt; &lt;intent-filter android:priority=&quot;2147483647&quot;&gt; &lt;action android:name=&quot;app.com.cn&quot; &gt;&lt;/action&gt; &lt;/intent-filter&gt; &lt;/receiver&gt; 动态注册动态注册 BroadcastReceiver 是在代码中定义并设置好一个 IntentFilter 对象，然后在需要注册的地方调用 Context.registerReceiver() 方法，调用 Context.unregisterReceiver() 方法取消注册，此时就不需要在清单文件中注册 Receiver 了 这里采用在 Service 中注册广播接收器的形式，分别在注册广播接收器、取消注册广播接受器和接收到广播时输出Log 123456789101112131415161718192021222324252627MyBroadCastReceiver2 myBroadCastReceiver2;//动态注册广播接收器public void reg(View view)&#123; if(myBroadCastReceiver2==null)&#123; //创建要注册的广播接收器 myBroadCastReceiver2=new MyBroadCastReceiver2(); //创建意图过滤器 指定要接收的频道 IntentFilter intentFilter=new IntentFilter(&quot;app.com.cn&quot;); //registerReceiver(要注册的广播接收器，意图过滤器); registerReceiver(myBroadCastReceiver2,intentFilter); //弹框提示 Toast.makeText(this,&quot;给myBroadCastReceiver2动态注册&quot;,Toast.LENGTH_SHORT).show(); &#125;else&#123; Toast.makeText(this,&quot;myBroadCastReceiver2已经被注册过了&quot;,Toast.LENGTH_SHORT).show(); &#125;&#125;//解注册广播接收器public void unReg()&#123; if(myBroadCastReceiver2!=null)&#123; //解除刚才注册的接收器 unregisterReceiver(myBroadCastReceiver2); myBroadCastReceiver2=null; &#125;&#125; 相关API Context SendBroadCast(Intent intent);发送一般广播 SendOrderedBroadCast(Intent intent); 发送有序广播 registerReceiver(receiver,intentFilter);注册广播接收器 UnRegisterReceiver(receiver); 解注册广播接收器 Android常见的系统广播Android 内置了很多系统级别的广播，我们可以在应用程序里面通过监听这些广播来得到各种系统的状态信息。 广播 Intent 开机广播。这个动作被广播一次（只有一次） Intent.ACTION_BOOT_COMPLETED 重启设备时的广播 Intent.ACTION_REBOOT; 屏幕被关闭之后的广播 Intent.ACTION_SCREEN_OFF; 屏幕被打开之后的广播 Intent.ACTION_SCREEN_ON; 插上外部电源时发出的广播 Intent.ACTION_POWER_CONNECTED; 已断开外部电源连接时发出的广播 Intent.ACTION_POWER_DISCONNECTED; 表示电池电量低 Intent.ACTION_BATTERY_LOW; 表示电池电量充足，即从电池电量低变化到饱满时会发出广播 Intent.ACTION_BATTERY_OKAY; 充电状态，只能通过Context.registerReceiver()注册 Intent.ACTION_BATTERY_CHANGED; 关闭或打开飞行模式时的广播 Intent.ACTION_AIRPLANE_MODE_CHANGED; 设备墙纸已改变时发出的广播 Intent.ACTION_WALLPAPER_CHANGED; 设备日期发生改变时会发出此广播 Intent.ACTION_DATE_CHANGED 按下照相时的拍照按键(硬件按键)时发出的广播 Intent.ACTION_CAMERA_BUTTON; 当屏幕超时进行锁屏时,当用户按下电源按钮,长按或短按(不管有没跳出话框) Intent.ACTION_CLOSE_SYSTEM_DIALOGS; 设备当前设置被改变时发出的广播(包括的改变:界面语言，设备方向，等，请参考Configuration.java) Intent.ACTION_CONFIGURATION_CHANGED; 设备内存不足时发出的广播,此广播只能由系统使用，其它APP不可用 Intent.ACTION_DEVICE_STORAGE_LOW; 设备内存从不足到充足时发出的广播,此广播只能由系统使用，其它APP不可用 Intent.ACTION_DEVICE_STORAGE_OK; 关闭系统时发出的广播 Intent.ACTION_SHUTDOWN; 时区发生改变时发出的广播 Intent.ACTION_TIMEZONE_CHANGED; 时间被设置时发出的广播 Intent.ACTION_TIME_CHANGED; 移动APP完成之后，发出的广播(移动是指:APP2SD) Intent.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE; 正在移动APP时，发出的广播(移动是指:APP2SD) Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE; Gtalk已建立连接时发出的广播 Intent.ACTION_GTALK_SERVICE_CONNECTED; Gtalk已断开连接时发出的广播 Intent.ACTION_GTALK_SERVICE_DISCONNECTED; 在耳机口上插入耳机时发出的广播 Intent.ACTION_HEADSET_PLUG; 改变输入法时发出的广播 Intent.ACTION_INPUT_METHOD_CHANGED; 设备当前区域设置已更改时发出的广播 Intent.ACTION_LOCALE_CHANGED; 广播：当前时间改变，每分钟都发送，只能通过Context.registerReceiver()方法来注册 Intent.ACTION_TIME_TICK; 一个用户ID已经从系统中移除发出的广播 Intent.ACTION_UID_REMOVED; 设备已进入USB大容量储存状态时发出的广播 Intent.ACTION_UMS_CONNECTED; 设备已从USB大容量储存状态转为正常状态时发出的广播 Intent.ACTION_UMS_DISCONNECTED; 表示用户和包管理所承认的低内存状态通知应该开始。 Intent.ACTION_MANAGE_PACKAGE_STORAGE; 未正确移除SD卡(正确移除SD卡的方法:设置–SD卡和设备内存–卸载SD卡)，但已把SD卡取出来时发出的广播 ,扩展介质（扩展卡）已经从 SD 卡插槽拔出，但是挂载点 (mount point) 还没解除 (unmount) Intent.ACTION_MEDIA_BAD_REMOVAL; 插入SD卡并且已正确安装（识别）时发出的广播, 扩展介质被插入，而且已经被挂载。 Intent.ACTION_MEDIA_MOUNTED; 按下”Media Button” 按键时发出的广播,假如有”Media Button” 按键的话(硬件按键) Intent.ACTION_MEDIA_BUTTON; 插入外部储存装置，比如SD卡时，系统会检验SD卡，此时发出的广播? Intent.ACTION_MEDIA_CHECKING; 已拔掉外部大容量储存设备发出的广播（比如SD卡，或移动硬盘）,不管有没有正确卸载都会发出此广播, 用户想要移除扩展介质（拔掉扩展卡）。 Intent.ACTION_MEDIA_EJECT; 拓展介质存在，但使用不兼容FS（或为空）的路径安装点检查介质包含在Intent.mData领域。 Intent.ACTION_MEDIA_NOFS; 外部储存设备已被移除，不管有没正确卸载,都会发出此广播， 扩展介质被移除。 Intent.ACTION_MEDIA_REMOVED; 广播：已经扫描完介质的一个目录 Intent.ACTION_MEDIA_SCANNER_FINISHED; 请求媒体扫描仪扫描文件并将其添加到媒体数据库。 Intent.ACTION_MEDIA_SCANNER_SCAN_FILE; 广播：开始扫描介质的一个目录 Intent.ACTION_MEDIA_SCANNER_STARTED; 广播：扩展介质存在，但是还没有被挂载 (mount) Intent.ACTION_MEDIA_UNMOUNTED 广播：扩展介质的挂载被解除 (unmount)，因为它已经作为 USB 大容量存储被共享。 Intent.ACTION_MEDIA_SHARED; 成功的安装APK之后，设备上新安装了一个应用程序包。 Intent.ACTION_PACKAGE_ADDED; 一个已存在的应用程序包已经改变，包括包名 Intent.ACTION_PACKAGE_CHANGED; 清除一个应用程序的数据时发出的广播(在设置－－应用管理－－选中某个应用，之后点清除数据时) Intent.ACTION_PACKAGE_DATA_CLEARED; 触发一个下载并且完成安装时发出的广播，比如在电子市场里下载应用 Intent.ACTION_PACKAGE_INSTALL; 成功的删除某个APK之后发出的广播, 一个已存在的应用程序包已经从设备上移除，包括包名（正在被安装的包程序不能接收到这个广播） Intent.ACTION_PACKAGE_REMOVED; 替换一个现有的安装包时发出的广播（不管现在安装的APP比之前的新还是旧，都会发出此广播） Intent.ACTION_PACKAGE_REPLACED; 用户重新开始一个包，包的所有进程将被杀死，所有与其联系的运行时间状态应该被移除，包括包名（重新开始包程序不能接收到这个广播） Intent.ACTION_PACKAGE_RESTARTED;","categories":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"Android","slug":"学习/Android","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/Android/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"Android","slug":"Android","permalink":"https://blog.darkcrane.com/tags/Android/"},{"name":"BroadcastReceiver","slug":"BroadcastReceiver","permalink":"https://blog.darkcrane.com/tags/BroadcastReceiver/"}]},{"title":"Github+jsDelivr+PicGo 打造稳定快速、高效免费图床","slug":"Github+jsDelivr+PicGo-打造稳定快速、高效免费图床","date":"2020-03-02T14:22:05.000Z","updated":"2020-03-02T14:22:05.000Z","comments":true,"path":"posts/f95e7e65/","link":"","permalink":"https://blog.darkcrane.com/posts/f95e7e65/","excerpt":"– 前言图床是个啥东西就不用过多介绍了，先来对比一下各路图床： 微博图床：以前用的人比较多，从2019年4月开始开启了防盗链，凉凉 SM.MS：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧 其他小众图床：随时有挂掉的风险 Imgur等国外图床：国内访问速度太慢，随时有被墙的风险 大厂储存服务：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，容量限制，操作繁琐，又是实名认证又是域名备案的，麻烦，而且还要花钱（有钱又不怕麻烦的当我没说）","text":"– 前言图床是个啥东西就不用过多介绍了，先来对比一下各路图床： 微博图床：以前用的人比较多，从2019年4月开始开启了防盗链，凉凉 SM.MS：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧 其他小众图床：随时有挂掉的风险 Imgur等国外图床：国内访问速度太慢，随时有被墙的风险 大厂储存服务：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，容量限制，操作繁琐，又是实名认证又是域名备案的，麻烦，而且还要花钱（有钱又不怕麻烦的当我没说） 因此，GitHub 图床是个不错的选择，利用 jsDelivr CDN 加速访问（jsDelivr 是一个免费开源的 CDN 解决方案），PicGo 工具一键上传，操作简单高效，GitHub 和 jsDelivr 都是大厂，不用担心跑路问题，不用担心速度和容量问题，而且完全免费，可以说是目前免费图床的最佳解决方案！ – 新建GitHub仓库登录/注册GitHub，新建一个仓库，填写好仓库名，仓库描述，根据需求选择是否为仓库初始化一个README.md描述文件 – 生成一个Token在主页依次选择【Settings】-【Developer settings】-【Personal access tokens】-【Generate new token】，填写好描述，勾选【repo】，然后点击【Generate token】生成一个Token，注意这个Token只会显示一次，自己先保存下来，或者等后面配置好PicGo后再关闭此网页 – 配置PicGo前往下载PicGo，安装好后开始配置图床 设定仓库名：按照【用户名/图床仓库名】的格式填写 设定分支名：【master】 设定Token：粘贴之前生成的【Token】 指定存储路径：填写想要储存的路径，如【img/】，这样就会在仓库下创建一个名为 img的文件夹，图片将会储存在此文件夹中 设定自定义域名：它的作用是，在图片上传后，PicGo 会按照【自定义域名+储存路径+上传的图片名】的方式生成访问链接，并放到粘贴板上，因为我们要使用 jsDelivr 加速访问，所以可以设置为https://cdn.jsdelivr.net/gh/用户名/图床仓库名 ，上传完毕后，我们就可以通过https://cdn.jsdelivr.net/gh/用户名/图床仓库名/图片路径 加速访问我们的图片了，比如上图的图片链接为：https://cdn.jsdelivr.net/gh/youhua38tao/blogimghost/img/20200302233019.png点击查看 – 进行高效创作配置好PicGo后，我们就可以进行高效创作了，将图片拖拽到上传区，将会自动上传并复制访问链接，将链接粘贴到博文中就行了，访问速度杠杠的，此外PicGo还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，PicGo还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！","categories":[{"name":"图床","slug":"图床","permalink":"https://blog.darkcrane.com/categories/%E5%9B%BE%E5%BA%8A/"}],"tags":[{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"},{"name":"公益","slug":"公益","permalink":"https://blog.darkcrane.com/tags/%E5%85%AC%E7%9B%8A/"},{"name":"图床","slug":"图床","permalink":"https://blog.darkcrane.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"网站优化","slug":"网站优化","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/"}]},{"title":"Hexo优化(lazyload)","slug":"lazyload安装","date":"2020-03-02T14:22:05.000Z","updated":"2020-03-02T14:22:05.000Z","comments":true,"path":"posts/629b4849/","link":"","permalink":"https://blog.darkcrane.com/posts/629b4849/","excerpt":"hexo-lazyload-image（图片懒加载插件）点击这里查看 安装1$ npm install hexo-lazyload-image --save","text":"hexo-lazyload-image（图片懒加载插件）点击这里查看 安装1$ npm install hexo-lazyload-image --save 用法首先从你的hexo项目_config.yml中添加配置。 1234lazyload: enable: true onlypost: false loadingImg: # eg .&#x2F;images&#x2F;loading.gif Onlypost 如果为true，则仅帖子或页面中的图像将支持懒加载。 如果为false，则网站的整个图像将使用懒加载，包括与主题距离较远的图像，但不包括CSS样式的背景图像。 loadingImg 如果不设置任何值（默认情况下），则它将使用默认的加载图像。 如果要自定义图像，则需要将加载的图像复制到当前主题图像文件夹，然后更改此路径以找到它。 为指定图像指定不延迟 如果同时在markdown或html中的img标签上指定属性，我们也可以禁用图片懒加载 1&lt;img no-lazy src&#x3D;&quot;abc.png&quot; &#x2F;&gt; 运行hexo命令。 1$ hexo clean &amp;&amp; hexo g","categories":[{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"},{"name":"网站优化","slug":"网站优化","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/"},{"name":"美化","slug":"美化","permalink":"https://blog.darkcrane.com/tags/%E7%BE%8E%E5%8C%96/"}]},{"title":"为自己的网站添加404公益页面","slug":"为自己的网站添加404公益页面","date":"2020-02-29T16:22:05.000Z","updated":"2020-02-29T16:22:05.000Z","comments":true,"path":"posts/32f127a5/","link":"","permalink":"https://blog.darkcrane.com/posts/32f127a5/","excerpt":"当访问不存在的页面时，会直接出现can’t get xxx或返回默认404页面，所以我添加了腾讯的404公益页面，也算是尽了一份力吧！ 开始折腾","text":"当访问不存在的页面时，会直接出现can’t get xxx或返回默认404页面，所以我添加了腾讯的404公益页面，也算是尽了一份力吧！ 开始折腾 在网站根目录下新建404.html文件： 123456789101112131415&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;404 - Hello KAYGB&lt;/title&gt; &lt;link rel=&quot;icon&quot; href=&quot;你的icon链接&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot; homePageUrl=&quot;自己的主页地址&quot; homePageName=&quot;回到我的主页&quot;charset=&quot;utf-8&quot;&gt; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 使用hexo的童鞋，你会发现hexo把这个文件也进行了渲染，所以我们要让hexo不渲染这个html文件。找到博客根目录下的_config.yml，打开并修改： 12345678910# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render: #如果也有别的页面不需要渲染，直接在下方添加就可以了 - 404.html #将404.html加进去，【-】之后要有空格隔开 然后： 1hexo g -d 访问一下https://你的域名.github.io/404： 将网站部署到云服务器上的还需要更改服in务器配置，(以ngnix为例)更改nginx监听的网站虚拟主机配置文件，nginx.conf，在server定义区域内增加： 1error_page 404 &#x3D; &#x2F;404.html; 保存，重启nginx服务器，OJBK。","categories":[{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"},{"name":"公益","slug":"公益","permalink":"https://blog.darkcrane.com/tags/%E5%85%AC%E7%9B%8A/"}]},{"title":"博客美化","slug":"博客美化","date":"2020-01-02T14:22:05.000Z","updated":"2020-01-02T14:22:05.000Z","comments":true,"path":"posts/560e8e48/","link":"","permalink":"https://blog.darkcrane.com/posts/560e8e48/","excerpt":"自定义鼠标指针样式在 \\themes\\volantis\\source\\less\\_base.less 文件 body 样式里写入如下代码： 123456body &#123; cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TRHX&#x2F;CDN-for-itrhx.com@2.1.6&#x2F;images&#x2F;mouse.cur),auto; background-color: @theme_background; ...... ......&#125;","text":"自定义鼠标指针样式在 \\themes\\volantis\\source\\less\\_base.less 文件 body 样式里写入如下代码： 123456body &#123; cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TRHX&#x2F;CDN-for-itrhx.com@2.1.6&#x2F;images&#x2F;mouse.cur),auto; background-color: @theme_background; ...... ......&#125; 鼠标指针可以用 Axialis CursorWorkshop 这个软件自己制作，不同主题具体放的文件有所不同，确保在博客主体 body 的 CSS 文件中即可，其中的鼠标指针链接可替换成自己的，首先尝试加载 https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur ，如果该文件不存在或由于其他原因无效，那么 auto 会被使用，也就是自动默认效果，图片格式为.ico、.ani、.cur，建议使用.cur，如果使用.ani或者其他格式无效，原因是浏览器兼容问题，请阅读参考文档或者参考以下兼容表： 浏览器 最低版本 格式 Internet Explorer 6.0 .cur / .ani Firefox (Gecko), Windows and Linux 1.5 (1.8) .cur / .png / .gif / .jpg Firefox (Gecko) 4.0 (2.0) .cur / .png / .gif / .jpg / .svg Opera — — Safari (Webkit) 3.0 (522-523) .cur / .png / .gif / .jpg 添加鼠标点击爱心效果在 \\themes\\volantis\\source\\js 下新建文件 love.js，在 love.js 文件中添加以下代码： 1!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e&#x3D;0;e&lt;d.length;e++)d[e].alpha&lt;&#x3D;0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+&#x3D;.004,d[e].alpha-&#x3D;.013,d[e].el.style.cssText&#x3D;&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof e.onclick&amp;&amp;e.onclick;e.onclick&#x3D;function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a&#x3D;t.createElement(&quot;div&quot;);a.className&#x3D;&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a&#x3D;t.createElement(&quot;style&quot;);a.type&#x3D;&quot;text&#x2F;css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText&#x3D;e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d&#x3D;[];e.requestAnimationFrame&#x3D;function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3&#x2F;60)&#125;&#125;(),n()&#125;(window,document); 在 \\themes\\volantis\\layout\\layout.ejs 文件末尾添加以下代码： 12&lt;!-- 页面点击小红心 --&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;love.js&quot;&gt;&lt;&#x2F;script&gt; 完成以上操作后，当我们点击鼠标的时候就可以看见爱心的特效了 添加鼠标点击显示字体效果在 \\themes\\volantis\\source\\js 下新建文件 click_show_text.js，在 click_show_text.js 文件中添加以下代码： 123456789101112131415161718192021222324252627282930313233var a_idx = 0;jQuery(document).ready(function($) &#123; $(&quot;body&quot;).click(function(e) &#123; var a = new Array (&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;); var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css(&#123; &quot;z-index&quot;: 5, &quot;top&quot;: y - 20, &quot;left&quot;: x, &quot;position&quot;: &quot;absolute&quot;, &quot;font-weight&quot;: &quot;bold&quot;, &quot;color&quot;: &quot;#FF0000&quot; &#125;); $(&quot;body&quot;).append($i); $i.animate(&#123; &quot;top&quot;: y - 180, &quot;opacity&quot;: 0 &#125;, 3000, function() &#123; $i.remove(); &#125;); &#125;); setTimeout(&#x27;delay()&#x27;, 2000);&#125;);function delay() &#123; $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;);&#125; 其中的社会主义核心价值观可以根据你自己的创意替换为其他文字 如果想要每次点击显示的文字为不同颜色，可以将其中 color 值进行如下更改： 1&quot;color&quot;: &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot; 然后在 \\themes\\volantis\\layout\\layout.ejs 文件末尾添加以下代码： 12&lt;!--单击显示文字--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/click_show_text.js&quot;&gt;&lt;/script&gt; 添加鼠标点击烟花爆炸效果在 \\themes\\volantis\\source\\js 目录下新建一个 fireworks.js 的文件，里面写入以下代码： 1&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;; 然后在 \\themes\\volantis\\layout\\layout.ejs 文件中写入以下代码： 123&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/fireworks.js&quot;&gt;&lt;/script&gt; 浏览器网页标题恶搞当用户访问你的博客时点击到了其他网页，我们可以恶搞一下网页标题，呼唤用户回来，首先在目录 \\themes\\volantis\\source\\js 下新建一个 FunnyTitle.js 文件，在里面填写如下代码： 1234567891011121314151617// 浏览器搞笑标题var OriginTitle = document.title;var titleTime;document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123; if (document.hidden) &#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/funny.ico&quot;); document.title = &#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;; clearTimeout(titleTime); &#125; else &#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/favicon.ico&quot;); document.title = &#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27; + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125;&#125;); 其中 funny.ico 是用户切换到其他标签后你网站的图标，favicon.ico 是正常图标，然后在 \\themes\\material-x\\layout\\layout.ejs 文件中添加如下代码：java 12&lt;!--浏览器搞笑标题--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/FunnyTitle.js&quot;&gt;&lt;/script&gt; 再次部署博客后就可以看见标题搞笑的效果了： 添加背景代码雨特效新建 DigitalRain.js，写入以下代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657window.onload = function()&#123; //获取画布对象 var canvas = document.getElementById(&quot;canvas&quot;); //获取画布的上下文 var context =canvas.getContext(&quot;2d&quot;); var s = window.screen; var W = canvas.width = s.width; var H = canvas.height; //获取浏览器屏幕的宽度和高度 //var W = window.innerWidth; //var H = window.innerHeight; //设置canvas的宽度和高度 canvas.width = W; canvas.height = H; //每个文字的字体大小 var fontSize = 12; //计算列 var colunms = Math.floor(W /fontSize); //记录每列文字的y轴坐标 var drops = []; //给每一个文字初始化一个起始点的位置 for(var i=0;i&lt;colunms;i++)&#123; drops.push(0); &#125; //运动的文字 var str =&quot;WELCOME TO WWW.ITRHX.COM&quot;; //4:fillText(str,x,y);原理就是去更改y的坐标位置 //绘画的函数 function draw()&#123; context.fillStyle = &quot;rgba(238,238,238,.08)&quot;;//遮盖层 context.fillRect(0,0,W,H); //给字体设置样式 context.font = &quot;600 &quot;+fontSize+&quot;px Georgia&quot;; //给字体添加颜色 context.fillStyle = [&quot;#33B5E5&quot;, &quot;#0099CC&quot;, &quot;#AA66CC&quot;, &quot;#9933CC&quot;, &quot;#99CC00&quot;, &quot;#669900&quot;, &quot;#FFBB33&quot;, &quot;#FF8800&quot;, &quot;#FF4444&quot;, &quot;#CC0000&quot;][parseInt(Math.random() * 10)];//randColor();可以rgb,hsl, 标准色，十六进制颜色 //写入画布中 for(var i=0;i&lt;colunms;i++)&#123; var index = Math.floor(Math.random() * str.length); var x = i*fontSize; var y = drops[i] *fontSize; context.fillText(str[index],x,y); //如果要改变时间，肯定就是改变每次他的起点 if(y &gt;= canvas.height &amp;&amp; Math.random() &gt; 0.99)&#123; drops[i] = 0; &#125; drops[i]++; &#125; &#125;; function randColor()&#123;//随机颜色 var r = Math.floor(Math.random() * 256); var g = Math.floor(Math.random() * 256); var b = Math.floor(Math.random() * 256); return &quot;rgb(&quot;+r+&quot;,&quot;+g+&quot;,&quot;+b+&quot;)&quot;; &#125; draw(); setInterval(draw,35);&#125;; 在主题文件的相关css文件中（以 Material X 1.2.1 主题为例，在\\themes\\volantis\\source\\less\\_main.less 文件末尾）添加以下代码： 12345678910canvas &#123; position: fixed; right: 0px; bottom: 0px; min-width: 100%; min-height: 100%; height: auto; width: auto; z-index: -1;&#125; 然后在主题的 layout.ejs 文件中引入即可： 123&lt;!-- 数字雨 --&gt;&lt;canvas id&#x3D;&quot;canvas&quot; width&#x3D;&quot;1440&quot; height&#x3D;&quot;900&quot; &gt;&lt;&#x2F;canvas&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;DigitalRain.js&quot;&gt;&lt;&#x2F;script&gt; 最终效果： 添加网站运行时间一个比较好的小功能，可以看见自己的博客运行多久了，时间一天天的增加，成就感也会一天天增加的在 \\themes\\volantis\\layout\\_partial\\footer.ejs 文件下添加以下代码： 1234567891011121314151617&lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;&lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt;&lt;script&gt; var now &#x3D; new Date(); function createtime() &#123; var grt&#x3D; new Date(&quot;08&#x2F;10&#x2F;2018 17:38:00&quot;);&#x2F;&#x2F;在此处修改你的建站时间，格式：月&#x2F;日&#x2F;年 时:分:秒 now.setTime(now.getTime()+250); days &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24; dnum &#x3D; Math.floor(days); hours &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum); hnum &#x3D; Math.floor(hours); if(String(hnum).length &#x3D;&#x3D;1 )&#123;hnum &#x3D; &quot;0&quot; + hnum;&#125; minutes &#x3D; (now - grt ) &#x2F; 1000 &#x2F;60 - (24 * 60 * dnum) - (60 * hnum); mnum &#x3D; Math.floor(minutes); if(String(mnum).length &#x3D;&#x3D;1 )&#123;mnum &#x3D; &quot;0&quot; + mnum;&#125; seconds &#x3D; (now - grt ) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum &#x3D; Math.round(seconds); if(String(snum).length &#x3D;&#x3D;1 )&#123;snum &#x3D; &quot;0&quot; + snum;&#125; document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; &#125; setInterval(&quot;createtime()&quot;,250);&lt;&#x2F;script&gt;","categories":[{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"},{"name":"网站优化","slug":"网站优化","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/"},{"name":"美化","slug":"美化","permalink":"https://blog.darkcrane.com/tags/%E7%BE%8E%E5%8C%96/"}]},{"title":"计算机组成原理","slug":"计算机组原理","date":"2019-04-06T14:22:05.000Z","updated":"2019-04-06T14:22:05.000Z","comments":true,"path":"posts/8d4b7ae1/","link":"","permalink":"https://blog.darkcrane.com/posts/8d4b7ae1/","excerpt":"第一章 计算机系统概论 1.1 了解计算机的分类 1.2 计算机的性能指标 概念，计算题（CPI，MIPS……）P5例1、例2 1.5 计算机系统的层次结构 简答题 P14图1.8","text":"第一章 计算机系统概论 1.1 了解计算机的分类 1.2 计算机的性能指标 概念，计算题（CPI，MIPS……）P5例1、例2 1.5 计算机系统的层次结构 简答题 P14图1.8 第二章 运算方法与运算器 2.1 数据格式 P18IEEE754中浮点数的表示（单精度格式、32位） 二进制与IEEE754的转换 P18例1、例2 2.2 定点加减法运算 注意字长、异常（溢出，使用双符号位法检测） 2.5 定点运算器的组成 超前运算基本概念 2.6 浮点运算方法和浮点运算器 简答题：浮点运算基本步骤（0操作数检查、比较阶码大小并完成对阶、尾数求和运算、结果规格化、舍入处理、溢出处理） 计算题：加减法。 第三章 多层次的存储器 3.1 存储器概述 存储器的分类、技术指标 3.2 SRAM存储器 3.3 DRAM存储器 存储器容量的扩充（画出完整电路） 3.4 只读存储器和闪速存储器 3.5 并行存储器 了解特点 3.6 cache存储器 参数（计算公式）：命中率、平均访问时间、访问效率 设计：主存与cache地址的映射方式（全相联、直接映射、组相联）、*内存格式设计* 第四章 指令系统 4.1 指令系统的发展与性能要求 4.2 指令格式 P121例1、例2、例3 第五章 中央处理器 5.1 CPU的功能和组成 5.2 指令周期 指令周期、总线周期、时钟周期的对应关系 5.4 微程序控制器 指令方框图➡微程序 5.6 流水CPU 课后习题13 总线系统略略略","categories":[{"name":"复习（预习）资料","slug":"复习（预习）资料","permalink":"https://blog.darkcrane.com/categories/%E5%A4%8D%E4%B9%A0%EF%BC%88%E9%A2%84%E4%B9%A0%EF%BC%89%E8%B5%84%E6%96%99/"}],"tags":[{"name":"期末复习","slug":"期末复习","permalink":"https://blog.darkcrane.com/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"},{"name":"组原","slug":"组原","permalink":"https://blog.darkcrane.com/tags/%E7%BB%84%E5%8E%9F/"},{"name":"计算机组成原理","slug":"计算机组成原理","permalink":"https://blog.darkcrane.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"}]},{"title":"软件工程复习（预习）1","slug":"软件工程1","date":"2019-04-06T14:22:05.000Z","updated":"2019-04-06T14:22:05.000Z","comments":true,"path":"posts/71689c93/","link":"","permalink":"https://blog.darkcrane.com/posts/71689c93/","excerpt":"Q1. 使用软件时提出增加新功能就必须进行（ ）维护。（单选，1分） 改正性 适应性 完善性 预防性","text":"Q1. 使用软件时提出增加新功能就必须进行（ ）维护。（单选，1分） 改正性 适应性 完善性 预防性 Q2. 类的行为应该基于（ ）进行测试。（单选，1分） 数据流图 用例图 对象图 状态图 Q3. 在软件工程中，软件测试的目的是（ ）。（单选，1分） 试验性运行软件 发现软件的错误 证明软件是正确的 找出软件中的全部错误 Q4. 程序的三种基本控制结构的共同特点是（ ）。（单选，1分） 不能嵌套使用 只能用来写简单程序 已经用硬件实现 只有一个入口和一个出口 Q5. 维护中，因误删除一个标识符而引起的错误是（ ）副作用。（单选，1分） 文档 数据 编码 设计 Q6. 下列描述模型中都属于功能模型的是（ ）。（单选，1分） 用例图、数据流图 实体联系图、数据流图 状态图、顺序图 对象图、类图 Q7. 下列不可用于需求分析的图形工具是 （ ）。（单选，1分） 层次方框图 Warnier图 行为图 判定表 Q8. 下列不属于软件项目人员的组织形式的是（ ）。（单选，1分） 主程序员制小组 民主制小组 层次式小组 协作式小组 Q9. 下列不是可行性研究的成果的是（ ）。（单选，1分） 系统流程图 数据流图 Gant图 数据字典 Q10. 为提高软件测试的效率，应该（ ）。（单选，1分） 随机地选取测试数据 取一切可能的输入数据作为测试数据 在完成编码后制定软件测试计划 选择发现错误可能性大的数据作为测试数据 Q11. 系统设计阶段的主要成果是( )。 （单选，1分） 用户的决策方针 用户的分析方案 系统设计说明书 系统总体设计方案 Q12. 一般而言，在软件生存周期中，时间最长的阶段是（ ）（单选，1分） 需求分析 编码 软件概要设计 软件维护 Q13. 软件工程的三要素是指（ ）。（单选，1分） 方法、工具和过程 开发、确认和演进 分析、设计和测试 程序、数据和文档 Q14. 以下哪一项属于白盒技术设计测试用例的方法？( )（单选，1分） 分支覆盖 边界值分析 等价类划分 因果图 Q15. 下列属于黑盒测试的是 （ ）。 ①等价类划分法 ②边界值分析法 ③ 错误推测法 ④逻辑覆盖法 ⑤控制结构测试（单选，1分） ①②④ ①②④⑤ ①②③ ①③④⑤ Q16. 构件组装模型的基础是（ ）。（单选，1分） 面向对象技术 工序法 面向过程 笛卡尔坐标 Q17. 软件结构使用的图形工具，一般采用的图形工具是（ ）。（单选，1分） 数据流程图（DFD） 系统结构图（SC ） 问题分析图（PAD） 实体联系图（ERD） Q18. 下列不属于项目进度安排主要方法的是( )（单选，1分） 工程网络图 Gantt图 进度结构图 任务资源表 Q19. 任何项目都必须精心做好项目管理工作，最常用的计划管理工具是（ ）。 （单选，1分） 数据流程图 程序结构图 因果图 PERT 图 Q20. 程序的三种基本控制结构是（ ）。（单选，1分） 过程、子程序和分程序 顺序、选择和重复 递归、堆栈和队列 调用、返回和转移 Q21. ER模型中的基本成分不包含（ ）。（单选，1分） 实体 联系 属性 处理 Q22. 结构化软件设计是（ ）。（单选，1分） 面向数据结构的 面向数据流的 面向数据库的 面向对象设计的 Q23. 以下哪一项不是软件危机的表现（ ）。（单选，1分） 开发的软件可维护性差 经费预算经常被突破 软件极易被盗版 开发的软件不能满足用户需求 Q24. 为了提高测试的效率，应该（ ）。（单选，1分） 随机地选取测试数据 取一切可能的输入数据作为测试数据 在完成编码以后制定软件的测试计划 选择发现错误可能性大的数据作为测试数据 Q25. 程序的三种基本控制结构的共同特点是（ ）。（单选，1分） 不能嵌套使用 只能用来写简单程序 已经用硬件实现 只有一个入口和一个出口 Q26. 程序流程图中的箭头代表（ ）。（单选，1分） 数据流 控制流 调用关系 依赖关系 Q27. 在面向对象测试用例设计时，不采用的方法是（ ）。（单选，1分） 利用单类的操作的随机测试 利用多类间关联消息的随机测试 利用多类间关联消息的划分测试 利用单类的状态的状态测试 Q28. 软件测试时，正确的测试次序是（ ）。（单选，1分） 单元测试，集成测试，确认测试 单元测试，确认测试，集成测试 集成测试，单元测试，确认测试 确认测试，单元测试，集成测试 Q29. 因计算机硬件和软件环境的变化而作出的修改软件的过程称为（ ）。（单选，1分） 改正性维护 适应性维护 完善性维护 预防性维护 Q30. 以下哪个软件生存周期模型是一种风险驱动的模型（单选，1分） 瀑布模型 增量模型 螺旋模型 喷泉模型 Q31. 下列几种类型中，耦合性最弱的是（ ）。（单选，1分） 内容型 控制型 公共型 数据型 Q32. 一个只有顺序结构的程序，其圈复杂度是（ ）。（单选，1分） 0 1 3 不确定的 Q33. 对象是OO方法的核心，对象的类型有多种，通常把例如飞行、事故、演出、开会等等，称之为( )（单选，1分） 有形实体 作用 事件 性能说明 Q34. 下列各方法中（ ）不是软件测试方法。（单选，1分） 白盒法 黑盒法 动态测试 盒图法 Q35. 软件工程管理是对软件项目的开发管理，即对整个软件的（ ）活动的管理。（单选，1分） 软件项目 生存期 软件开发计划 软件开发 Q36. 若有一个计算类型的程序，它的输入量只有一个X，其范围是［-6.0，6.0］，现从输入的角度考虑一组测试用例：-6.001，-6.0，6.0，6.001。设计这组测试用例的方法是（ ）（单选，1分） 条件覆盖法 等价分类法 边界值分析法 错误推测法 Q37. 下列不属于OOA的模型的是（ ）。（单选，1分） 对象模型 功能模型 消息模型 动态模型 Q38. HIPO图是软件工程中的一种描述工具，采用HIPO图进行描述的阶段是（ ）。（单选，1分） 可行性分析 需求分析 概要设计 详细设计 Q39. 软件复杂性度量的参数包括（ ）（单选，1分） 程序执行效率 程序规模 完整性 容错性 Q40. 检查软件产品是否符合需求定义的过程称为（ ）。（单选，1分） 确认测试 集成测试 单元测试 系统测试 Q41. 系统流程图是用来 （ ）。（单选，1分） 描绘程序结构的 描绘系统的逻辑模型 表示信息层次结构的图形工具 描绘物理系统的 Q42. 面向对象分析的首要工作是建立（ ）。（单选，1分） 系统的功能模型 系统的动态模型 软件对象类定义 系统的对象模型 Q43. 详细设计与概要设计衔接的图形工具是（ ）。（单选，1分） 数据流程图（DFD） 系统结构图（SC ） 问题分析图（PAD） 控制流程图（CFG） Q44. 用户开发应用系统的主要手段是( )。 （单选，1分） 生命周期法 原型法 第四代语言 面向对象方法 Q45. 为了提高软件产品的质量和可靠性，对某些无法避开的差错，使其影响减至最小程度所采用的技术是（ ）。（单选，1分） 容错技术 避开错误技术 检测技术 排错技术 Q46. 结构化技术不常采用的过程模型是（ ）。（单选，1分） 瀑布模型 增量模型 螺旋模型 喷泉模型 Q47. 需求分析的任务不包括（ ）。（单选，1分） 问题分析 系统设计 需求描述 需求评审。 Q48. 可行性研究要进行一次（ ）需求分析。 （单选，1分） 详细的 全面的 简化的、压缩的 彻底的 Q49. 提高软件质量和可靠的技术大致可分为两大类：其中一类就是避开错误技术，但避开错误技术无法做到完美无缺和绝无错误，这就需要（ ）。（单选，1分） 消除错误 检测错误 避开错误 容错 Q50. 从下列有关系统结构图的叙述中选出正确的叙述。（ ）（单选，1分） 系统结构图中反映的是程序中数据流的情况。 系统结构图是精确表达程序结构的图形表示法。因此，有时也可将系统结构当作程序流程图使用。 一个模块的多个下属模块在系统结构图中所处的左右位置是无关紧要的。 在系统结构图中，上级模块与其下属模块之间的调用关系用有向线段表示。这时，使用斜的线段和水平、垂直的线段具有相同的含义。","categories":[{"name":"复习（预习）资料","slug":"复习（预习）资料","permalink":"https://blog.darkcrane.com/categories/%E5%A4%8D%E4%B9%A0%EF%BC%88%E9%A2%84%E4%B9%A0%EF%BC%89%E8%B5%84%E6%96%99/"}],"tags":[{"name":"复习资料","slug":"复习资料","permalink":"https://blog.darkcrane.com/tags/%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/"},{"name":"题库","slug":"题库","permalink":"https://blog.darkcrane.com/tags/%E9%A2%98%E5%BA%93/"},{"name":"软件工程","slug":"软件工程","permalink":"https://blog.darkcrane.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"}]},{"title":"软件工程复习（预习）2","slug":"软件工程2","date":"2019-04-06T14:22:05.000Z","updated":"2019-04-06T14:22:05.000Z","comments":true,"path":"posts/73a2146f/","link":"","permalink":"https://blog.darkcrane.com/posts/73a2146f/","excerpt":"Q1. 软件设计中，划分模块的一个准则是（ ）。（单选，1分）低内聚低耦合低内聚高耦合高内聚低耦合高内聚高耦合","text":"Q1. 软件设计中，划分模块的一个准则是（ ）。（单选，1分）低内聚低耦合低内聚高耦合高内聚低耦合高内聚高耦合 Q2. 一个只有顺序结构的程序，其圈复杂度是（ ）。（单选，1分）013不确定的 Q3. 软件工程的三要素是指（ ）。（单选，1分）方法、工具和过程开发、确认和演进分析、设计和测试程序、数据和文档 Q4. 在整个软件维护阶段所花费的全部工作中，所占比例最大的是（ ）。（单选，1分）校正性维护适应性维护完善性维护预防性维护 Q5. 下列不属于软件项目人员的组织形式的是（ ）。（单选，1分）主程序员制小组民主制小组层次式小组协作式小组 Q6. 瀑布模型的存在问题是( )（单选，1分）用户容易参与开发缺乏灵活性用户与开发者易沟通适用可变需求 Q7. 结构化设计方法在软件开发中用于（ ）。（单选，1分）概要设计详细设计程序设计测试用例设计 Q8. 一般子系统的划分是在系统（ ）阶段，根据对系统的功能、数据分析的结果提出的。（单选，1分）需求分析逻辑阶段总体设计详细设计 Q9. 下列模型属于成本估算方法的有（ ）（单选，1分）COCOMO模型McCall模型McCabe度量法时间估算法 Q10. 下列不属于软件过程能力成熟度模型CMM分级的是（ ）。（单选，1分）初始级、可重复级可定义级可配置级可管理级、可优化级 Q11. 软件结构使用的图形工具，一般采用的图形工具是（ ）。（单选，1分）数据流程图（DFD）系统结构图（SC ）问题分析图（PAD）实体联系图（ERD） Q12. 逆向工程通常用在软件生命周期的（ ）阶段，它是从源代码或目标代码中提取设计信息。（单选，1分）需求分析软件设计软件测试软件维护 Q13. 软件开发环境按解决的问题分类包含（ ）（单选，1分）程序设计环境工具箱环境基于方法的环境以语言为中心的环境 Q14. 成本效益分析是（ ）的主要内容。（单选，1分）经济可行性分析项目可行性分析有形效益分析无形效益分析 Q15. 用于描述对象模型的工具是（ ）（单选，1分）数据流图结构图状态图对象图 Q16. 开发软件所需高成本和产品的低质量之间有着尖锐的矛盾，这种现象称做（ ）。（单选，1分）软件工程软件周期软件危机软件产生 Q17. 使用白盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。（单选，1分）程序的内部逻辑程序的复杂结构使用说明书程序的功能 Q18. 在软件质量度量领域，Boehm质量模型度量软件的三个方面，下列不属于Boehm质量模型的是（ ）。（单选，1分）产品修正（Product REVITIONS）产品运行（Product OPERATIONS）产品维护（Product MAINTATION）产品转移（Product TRANSITION） Q19. 下列不是可行性研究的成果的是（ ）。（单选，1分）系统流程图数据流图Gant图数据字典 Q20. 只有单重继承的类层次结构是（ ）层次结构。（单选，1分）网状型星型树型环型 Q21. 在结构化分析方法中用状态―迁移图表达系统或对象的行为。在状态―迁移图中，由一个状态和一个事件所决定的下一状态可能会有( )个。（单选，1分）12多个不确定 Q22. 从下列有关系统结构图的叙述中选出正确的叙述。（ ）（单选，1分）系统结构图中反映的是程序中数据流的情况。系统结构图是精确表达程序结构的图形表示法。因此，有时也可将系统结构当作程序流程图使用。一个模块的多个下属模块在系统结构图中所处的左右位置是无关紧要的。在系统结构图中，上级模块与其下属模块之间的调用关系用有向线段表示。这时，使用斜的线段和水平、垂直的线段具有相同的含义。 Q23. 用户开发应用系统的主要手段是( )。 （单选，1分）生命周期法原型法第四代语言面向对象方法 Q24. 下列（ ）属于不良的编程习惯。（单选，1分）尽量不使用GOTO语句从来不使用注释每行只写一条语句变量命名尽量直观 Q25. 软件质量必须在（ ）加以保证。（单选，1分）实现期间开发之前整个开发期间开发之后 Q26. 软件文档是信息系统( )的重要依据。 （单选，1分）可理解性可维护性可扩展性可移植性 Q27. 一般而言，在软件生存周期中，时间最长的阶段是（ ）（单选，1分）需求分析编码软件概要设计软件维护 Q28. 为了提高软件产品的质量和可靠性，对某些无法避开的差错，使其影响减至最小程度所采用的技术是（ ）（单选，1分）容错技术避开错误技术检测技术排错技术 Q29. 为了满足用户在使用过程中提出的要求,增加或调整系统某些功能而修改软件的过程是（ ）。（单选，1分）校正性维护完善性维护适应性维护预防性维护 Q30. 实践表明，确定发生错误的位置和内在原因所需的工作量几乎占整个调试工作量的（ ）。（单选，1分）30%50%70%90% Q31. 以下不属于逻辑覆盖的是（ ）。（单选，1分）语句覆盖判定覆盖条件覆盖基本路径测试 Q32. 为了提高软件的可移植性，应注意提高软件的（ ）。（单选，1分）使用的方便性简洁性可靠性设备独立性 Q33. 白盒测试方法重视（ ）的度量。 （单选，1分）测试覆盖率测试数据多少测试费用测试周期 Q34. 下列不属于可行性研究任务的是（ ）。（单选，1分）技术可行性，经济可行性操作可行性，法律与社会可行性经济可行性，人性化可行性国籍可行性，年龄可行性 Q35. 软件调试技术包括（ ）（单选，1分）回溯法调试边界值分析调试循环覆盖调试集成测试调试 Q36. 程序的三种基本控制结构的共同特点是（ ）。（单选，1分）不能嵌套使用只能用来写简单程序已经用硬件实现只有一个入口和一个出口 Q37. 在需求分析之前有必要进行（ ）工作。（单选，1分）程序设计可行性分析E-R分析3NF分析 Q38. 程序的三种基本控制结构是（ ）。（单选，1分）过程、子程序和分程序顺序、选择和重复递归、堆栈和队列调用、返回和转移 Q39. 下列不属于OOA的模型的是（ ）。（单选，1分）对象模型功能模型消息模型动态模型 Q40. 下列属于白盒测试的是（ ）。①等价类划分法 ②边界值分析法 ③ 错误推测法④逻辑覆盖法 ⑤控制结构测试（单选，1分）①②④⑤②③④⑤①②③⑤④⑤ Q41. 与计算机科学的理论研究不同，软件工程是一门（ ）。 （单选，1分）理论性学科原理性学科工程性学科心理性学科 Q42. 自底向上进行集成测试的优点是不必额外设计（ ）程序。（单选，1分）子被调用桩模块（Stub）驱动模块（Driver） Q43. 白盒测试是结构测试，被测对象基本上是源程序，以程序的（ ）为基础设计测试用例。（单选，1分）应用范围功能内部逻辑输入数据 Q44. 以下哪一项是软件开发环境中的主要组成部分（ ）（单选，1分）软件模型软件工具软件工程硬件环境 Q45. 以下哪一项不是软件危机的表现（ ）。（单选，1分）开发的软件可维护性差经费预算经常被突破软件极易被盗版开发的软件不能满足用户需求 Q46. 下列不属于可行性研究任务的是（ ）。（单选，1分）技术可行性，经济可行性操作可行性，法律与社会可行性经济可行性，人性化可行性国籍可行性，年龄可行性 Q47. 以下软件生存周期的活动中，要进行软件结构设计的是（ ）（单选，1分）测试用例设计概要设计程序设计详细设计 Q48. 软件复杂性度量的参数包括（ ）（单选，1分）程序执行效率程序规模完整性容错性 Q49. 以下哪个软件生存周期模型是一种风险驱动的模型（单选，1分）瀑布模型增量模型螺旋模型喷泉模型 Q50. 软件工程方法的提出起源于软件危机，其主要思想是按（ ）来组织和规范软件开发过程。（单选，1分）质量保证生产危机工程化的原则和方法开发效率","categories":[{"name":"复习（预习）资料","slug":"复习（预习）资料","permalink":"https://blog.darkcrane.com/categories/%E5%A4%8D%E4%B9%A0%EF%BC%88%E9%A2%84%E4%B9%A0%EF%BC%89%E8%B5%84%E6%96%99/"}],"tags":[{"name":"复习资料","slug":"复习资料","permalink":"https://blog.darkcrane.com/tags/%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/"},{"name":"题库","slug":"题库","permalink":"https://blog.darkcrane.com/tags/%E9%A2%98%E5%BA%93/"},{"name":"软件工程","slug":"软件工程","permalink":"https://blog.darkcrane.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"}]},{"title":"软件工程复习（预习）3","slug":"软件工程3","date":"2019-04-06T14:22:05.000Z","updated":"2019-04-06T14:22:05.000Z","comments":true,"path":"posts/4a524f9/","link":"","permalink":"https://blog.darkcrane.com/posts/4a524f9/","excerpt":"Q1. 结构化软件设计是（ ）。（单选，1分）面向数据结构的面向数据流的面向数据库的面向对象设计的","text":"Q1. 结构化软件设计是（ ）。（单选，1分）面向数据结构的面向数据流的面向数据库的面向对象设计的 Q2. 黑盒测试在设计测试用例时，主要需要研究（ ）。（单选，1分）需求规格说明与概要设计说明详细设计说明项目开发计划概要设计说明与详细设计说明 Q3. 一个模块的（ ）是指能直接控制该模块的模块数。（单选，1分）扇出数扇入数宽度深度 Q4. 软件需求是度量软件质量的基础，不符合需求的软件就不具备（ ）。（单选，1分）A.软件的特点B.质量C.软件产品D.功能 Q5. 一个C语言编写的冒泡排序算法程序，其环路复杂度是（ ）。（单选，1分）013不确定的 Q6. 下面不属于用例图作用的是（ ）。（单选，1分）展现软件的功能展现软件使用者和软件功能的关系展现软件的特性展现软件功能相互之间的关系 Q7. 程序流程图中的箭头代表（ ）。（单选，1分）数据流控制流调用关系依赖关系 Q8. 从下列有关系统结构图的叙述中选出正确的叙述。（ ）（单选，1分）系统结构图中反映的是程序中数据流的情况。系统结构图是精确表达程序结构的图形表示法。因此，有时也可将系统结构当作程序流程图使用。一个模块的多个下属模块在系统结构图中所处的左右位置是无关紧要的。在系统结构图中，上级模块与其下属模块之间的调用关系用有向线段表示。这时，使用斜的线段和水平、垂直的线段具有相同的含义。 Q9. 软件工程管理是对软件项目的开发管理，即对整个软件的（ ）活动的管理。（单选，1分）软件项目生存期软件开发计划软件开发 Q10. 在白盒技术测试用例的设计中，以下覆盖标准中发现错误能力最强的是（ ）。（单选，1分）语句覆盖判定覆盖判定/条件覆盖条件组合覆盖 Q11. 软件工程的三要素是指（ ）。（单选，1分）方法、工具和过程开发、确认和演进分析、设计和测试程序、数据和文档 Q12. 使用白盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。（单选，1分）程序的内部逻辑程序的复杂结构使用说明书程序的功能 Q13. 结构化技术不常采用的过程模型是（ ）。（单选，1分）瀑布模型增量模型喷泉模型螺旋模型 Q14. 自底向上进行集成测试的优点是不必额外设计（ ）程序。（单选，1分）子被调用桩模块（Stub）驱动模块（Driver） Q15. 下列关于编码风格说法错误的是（ ）。（单选，1分）强调编码风格有助于提高程序的可读性。团队采用一致的编码风格标准有助于提高软件的维护效率。强调编码风格会降低程序的灵活性。有经验的程序员编码风格就是好的编码风格。 Q16. 软件结构使用的图形工具，一般采用的图形工具是（ ）。（单选，1分）数据流程图（DFD）系统结构图（SC ）问题分析图（PAD）实体联系图（ERD） Q17. 下面关于文档的叙述（ ）。（单选，1分）A．文档是仅用于说明使用软件的操作命令，不包括软件设计和实现细节B．文档是软件产品的一部分，没有文档的软件就不成为软件C．高质量文档对于转让、变更、修改、扩充和使用有重要的意义D．软件文档的编制在软件开发工作中占有突出的地位和相当大的工作量 Q18. 软件开发过程中，抽取和整理用户需求并建立问题域精确模型的过程叫（ ）。（单选，1分）生存期面向对象设计面向对象程序设计面向对象分析 Q19. 下列不属于可行性研究任务的是（ ）。（单选，1分）技术可行性，经济可行性操作可行性，法律与社会可行性经济可行性，人性化可行性国籍可行性，年龄可行性 Q20. 程序设计语言的工程特性之一为（ ）。（单选，1分）软件的可重用性数据结构的描述性抽象类型的描述性数据库的易操作性 Q21. 某模块的功能是打印录取通知书或不录取通知书，调用模块可通过向此模块传递布尔标志信息决定本次调用哪种通知书的打印，这种模块之间的耦合称为（ ）。（单选，1分）数据耦合混合耦合公共耦合控制耦合 Q22. 结构化技术不常采用的过程模型是（ ）。（单选，1分）瀑布模型增量模型螺旋模型喷泉模型 Q23. 变更控制是一项最重要的软件配置任务，其中“检出”和（ ）处理实现了两个重要的变更控制要素，即存取控制和同步控制。（单选，1分）登入管理填写变更要求审查 Q24. 在软件测试中，首先对每个模块分别进行单元测试，然后再把所有的模块按设计要求装在一起测试，称为（ ）（单选，1分）确认测试系统测试渐增式测试非渐增式测试 Q25. 下列不是可行性研究的成果的是（ ）。（单选，1分）系统流程图数据流图Gant图数据字典 Q26. 程序的三种基本控制结构是（ ）。（单选，1分）过程、子程序和分程序顺序、选择和重复递归、堆栈和队列调用、返回和转移 Q27. 面向对象程序设计中，基于父类创建的子类具有父类的特性（属性和方法），这一特点称为类的（ ）。（单选，1分）多态性封装性继承性重用性 Q28. 不适于作为数据流图处理（加工）框名称的是（ ）。（单选，1分）人工校核工资数据工资支票数据打印工资支票计算职工工资 Q29. 瀑布模型的存在问题是( )（单选，1分）用户容易参与开发缺乏灵活性用户与开发者易沟通适用可变需求 Q30. 快速原型模型的主要特点之一是（ ）。（单选，1分）开发完毕才见到产品及早提供全部完整的软件产品开发完毕后才见到工作软件及早提供工作软件 Q31. 关于软件概念与软件质量论点错误的是（ ）。（单选，1分）软件简单地说由程序、文档组成软件设计质量评价的偶然聚合指标要强而功能聚合要弱软件设计质量评价的数据耦合指标要强而内容耦合要弱软件质量由实施技术与管理技术共同提高 Q32. 风险的三个属性是( ) 。 （单选，1分）风险发生的时间、地点、负责人风险事件、时间、影响风险事件、概率、影响风险数量、风险影响 Q33. 在需求分析之前有必要进行（ ）工作。（单选，1分）程序设计可行性分析E-R分析3NF分析 Q34. 类的行为应该基于（ ）进行测试。（单选，1分）数据流图用例图对象图状态图 Q35. 面向对象分析的首要工作是建立（ ）。（单选，1分）系统的功能模型系统的动态模型软件对象类定义系统的对象模型 Q36. 下列不属于可行性研究任务的是（ ）。（单选，1分）技术可行性，经济可行性操作可行性，法律与社会可行性经济可行性，人性化可行性国籍可行性，年龄可行性 Q37. 一般而言，在软件生存周期中，时间最长的阶段是（ ）（单选，1分）需求分析编码软件概要设计软件维护 Q38. 程序的三种基本控制结构的共同特点是（ ）。（单选，1分）不能嵌套使用只能用来写简单程序已经用硬件实现只有一个入口和一个出口 Q39. 可维护性的特性中相互促进的是（ ）。（单选，1分）可理解性和可测试性效率和可移植性效率和可修改性 效率和结构好 Q40. 软件重用的单位是（ ）。（单选，1分）软件模块性能过程功能 Q41. 模块内聚度越高，说明模块内各成分彼此结合的程度越（ ）。（单选，1分）松散紧密无法判断相等 Q42. 过程设计语言(PDL)，又称为（ ）（单选，1分）伪码中级程序语言高级程序设计语言低级程序设计语言 Q43. 下列模型属于成本估算方法的有（ ）（单选，1分）COCOMO模型McCall模型McCabe度量法时间估算法 Q44. 使用软件时提出增加新功能就必须进行（ ）维护。（单选，1分）改正性适应性完善性预防性 Q45. 原型化方法是用户和设计者之间执行的一种交互构成，适用于（ ）系统。（单选，1分）需求不确定性高的需求确定的管理信息实时 Q46. 因计算机硬件和软件环境的变化而作出的修改软件的过程称为（ ）。（单选，1分）改正性维护适应性维护完善性维护预防性维护 Q47. 结构化设计方法在软件开发中用于（ ）。（单选，1分）概要设计详细设计程序设计测试用例设计 Q48. 软件开发成本估算方法有（ ）。① 代码行技术 ② 任务分解技术 ③ 专家估算法④ 类推估算法 ⑤ 参数方程法 ⑥ 标准值法（单选，1分）①③④⑤⑥①②④⑤⑥①②③④⑤①②③④⑤⑥ Q49. 关于软件概念与软件质量论点错误的是（ ）（单选，1分）软件简单地说由程序、文档组成软件设计质量评价的数据耦合指标要强而内容耦合要弱软件质量由实施技术与管理技术共同提高软件设计质量评价的偶然聚合指标要强而功能聚合要弱 Q50. 以下软件生存周期的活动中，要进行软件结构设计的是（ ）（单选，1分）测试用例设计概要设计程序设计详细设计","categories":[{"name":"复习（预习）资料","slug":"复习（预习）资料","permalink":"https://blog.darkcrane.com/categories/%E5%A4%8D%E4%B9%A0%EF%BC%88%E9%A2%84%E4%B9%A0%EF%BC%89%E8%B5%84%E6%96%99/"}],"tags":[{"name":"复习资料","slug":"复习资料","permalink":"https://blog.darkcrane.com/tags/%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/"},{"name":"题库","slug":"题库","permalink":"https://blog.darkcrane.com/tags/%E9%A2%98%E5%BA%93/"},{"name":"软件工程","slug":"软件工程","permalink":"https://blog.darkcrane.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"}]},{"title":"软件工程复习（预习）4","slug":"软件工程4","date":"2019-04-06T14:22:05.000Z","updated":"2019-04-06T14:22:05.000Z","comments":true,"path":"posts/9ac1b15a/","link":"","permalink":"https://blog.darkcrane.com/posts/9ac1b15a/","excerpt":"Q1. 软件的发展经历了（ ）个发展阶段。（单选，1分）一二三四","text":"Q1. 软件的发展经历了（ ）个发展阶段。（单选，1分）一二三四 Q2. 对象实现了数据和操作的结合，使数据和操作（ ）于对象的统一体中。（单选，1分）结合隐藏封装抽象 Q3. 项目经理的职责不包括以下哪项内容( )。（单选，1分）开发计划组织实施项目控制系统支持 Q4. 下列模型属于成本估算方法的有（ ）（单选，1分）COCOMO模型McCall模型McCabe度量法时间估算法 Q5. 白盒测试方法重视（ ）的度量。 （单选，1分）测试覆盖率测试数据多少测试费用测试周期 Q6. 下列不属于可行性研究任务的是（ ）。（单选，1分）技术可行性，经济可行性操作可行性，法律与社会可行性经济可行性，人性化可行性国籍可行性，年龄可行性 Q7. 下列描述模型中既可用于结构化技术也可用于面向对象技术的模型是（ ）。（单选，1分）实体联系图、数据流图用例图、数据流图状态图、顺序图对象图、类图 Q8. 可行性研究要进行一次（ ）需求分析。 （单选，1分）详细的 全面的简化的、压缩的 彻底的 Q9. 每个对象可用它自己的一组属性和它可以执行的一组（ ）来表征。 （单选，1分）行为功能操作数据 Q10. 下列属于白盒测试的是（ ）。①等价类划分法 ②边界值分析法 ③ 错误推测法④逻辑覆盖法 ⑤控制结构测试（单选，1分）①②④⑤②③④⑤①②③⑤④⑤ Q11. 需求分析的任务不包括（ ）。（单选，1分）问题分析系统设计需求描述需求评审。 Q12. 软件产品的开发主要是（ ）。 （单选，1分）复制再生产拷贝研制 Q13. 一个只有顺序结构的程序，其圈复杂度是（ ）。（单选，1分）013不确定的 Q14. 下列不属于软件项目人员的组织形式的是（ ）。（单选，1分）主程序员制小组民主制小组层次式小组协作式小组 Q15. 信息系统开发的结构化方法的一个主要原则是( ) 。（单选，1分）自顶向下原则自底向上原则分步实施原则重点突破原则 Q16. 下列不属于项目进度安排主要方法的是( )（单选，1分）工程网络图Gantt图进度结构图任务资源表 Q17. 面向对象方法学的出发点和基本原则是尽可能模拟人类习惯的思维方式，分析、设计和实现一个软件系统的方法和过程，尽可能接近于人类认识世界解决问题的方法和过程。因此面向对象方法有许多特征，如软件系统是由对象组成的；（ ）；对象彼此之间仅能通过传递消息互相联系；层次结构的继承。（单选，1分）开发过程基于功能分析和功能分解强调需求分析重要性把对象划分成类，每个对象类都定义一组数据和方法对既存类进行调整 Q18. 当模块中包含复杂的条件组合，只有（ ）能够清晰地表达出各种动作之间的对应关系。（单选，1分）判定表和判定树盒图流程图关系图 Q19. 下列属于应用软件的是（ ）。 （单选，1分）计算机辅助教学软件软件测试工具办公自动化软件工程与科学计算软件 Q20. 软件工程管理是对软件项目的开发管理，即对整个软件的（ ）活动的管理。（单选，1分）软件项目生存期软件开发计划软件开发 Q21. 模块中所有成分结合起来完成一项任务，该模块的内聚性是（ ）。（单选，1分）功能内聚通信内聚顺序内聚逻辑内聚 Q22. 软件开发成本估算方法有（ ）。① 代码行技术 ② 任务分解技术 ③ 专家估算法④ 类推估算法 ⑤ 参数方程法 ⑥ 标准值法（单选，1分）①③④⑤⑥①②④⑤⑥①②③④⑤①②③④⑤⑥ Q23. 软件测试时，正确的测试次序是（ ）。（单选，1分）单元测试，集成测试，确认测试单元测试，确认测试，集成测试集成测试，单元测试，确认测试确认测试，单元测试，集成测试 Q24. 下面关于文档的叙述（ ）。（单选，1分）A．文档是仅用于说明使用软件的操作命令，不包括软件设计和实现细节B．文档是软件产品的一部分，没有文档的软件就不成为软件C．高质量文档对于转让、变更、修改、扩充和使用有重要的意义D．软件文档的编制在软件开发工作中占有突出的地位和相当大的工作量 Q25. 软件开发环境按解决的问题分类包含（ ）（单选，1分）程序设计环境工具箱环境基于方法的环境以语言为中心的环境 Q26. 用于描述对象模型的工具是（ ）（单选，1分）数据流图结构图状态图对象图 Q27. 在软件测试中，首先对每个模块分别进行单元测试，然后再把所有的模块按设计要求装在一起测试，称为（ ）（单选，1分）确认测试系统测试渐增式测试非渐增式测试 Q28. 不适于作为数据流图处理（加工）框名称的是（ ）。（单选，1分）人工校核工资数据工资支票数据打印工资支票计算职工工资 Q29. 下列（ ）属于压力测试。（单选，1分）通过测试系统的恢复能力，检测其数据恢复、重新启动等是否正常检测系统是否达到性能要求指标设计测试用例，使系统处于异常数量、异常频率、异常条件下，检测系统的承受能力检测系统安全保密的漏洞 Q30. 维护中，因误删除一个标识符而引起的错误是（ ）副作用。（单选，1分）文档数据编码设计 Q31. 任何项目都必须精心做好项目管理工作，最常用的计划管理工具是（ ）。 （单选，1分）数据流程图程序结构图因果图PERT 图 Q32. 软件部件的内部实现与外部可访问性的分离,是指软件的（ ）。 （单选，1分）继承性共享性封装性抽象性 Q33. 一般子系统的划分是在系统（ ）阶段，根据对系统的功能、数据分析的结果提出的。（单选，1分）需求分析逻辑阶段总体设计详细设计 Q34. 程序的三种基本控制结构的共同特点是（ ）。（单选，1分）不能嵌套使用只能用来写简单程序已经用硬件实现只有一个入口和一个出口 Q35. 一个软件的宽度是指其控制的（ ）。（单选，1分）模块数层数跨度厚度 Q36. 以下哪一项不是软件危机的表现（ ）。（单选，1分）开发的软件可维护性差经费预算经常被突破软件极易被盗版开发的软件不能满足用户需求 Q37. 对于使用原型的建议，下面说法错误的是（ ）。（单选，1分）开发周期很长的项目，可通过原型开发来缩短开发周期系统的使用可能变化较大，不能相对稳定，而原型模型具有适应变化的机制缺乏开发工具，或对原型的可用工具不了解的时候宜使用原型用户对系统的需求较为模糊，对某种要求缺乏信心时宜使用原型 Q38. 以下哪个软件生存周期模型是一种风险驱动的模型（单选，1分）瀑布模型增量模型螺旋模型喷泉模型 Q39. 在软件系统中，一个模块应该具有什么样的功能，这是由（ ）决定的。（单选，1分）需求分析概要设计详细设计程序设计 Q40. 面向对象程序设计中，基于父类创建的子类具有父类的特性（属性和方法），这一特点称为类的（ ）。（单选，1分）多态性封装性继承性重用性 Q41. 风险的三个属性是( ) 。 （单选，1分）风险发生的时间、地点、负责人风险事件、时间、影响风险事件、概率、影响风险数量、风险影响 Q42. 为了提高软件产品的质量和可靠性，对某些无法避开的差错，使其影响减至最小程度所采用的技术是（ ）。（单选，1分）容错技术避开错误技术检测技术排错技术 Q43. 在结构化分析方法中用状态―迁移图表达系统或对象的行为。在状态―迁移图中，由一个状态和一个事件所决定的下一状态可能会有( )个。（单选，1分）12多个不确定 Q44. 从事物的属性侧面来描述事物的方法就是（ ）的方法。（单选，1分）面向对象面向数据面向过程面向属性 Q45. 面向对象分析的首要工作是建立（ ）。（单选，1分）系统的功能模型系统的动态模型软件对象类定义系统的对象模型 Q46. 在结构化分析方法中，用以表达系统内数据的运动情况的工具有( )。（单选，1分）数据流图数据词典结构化英语判定表与判定树 Q47. 软件工程方法的提出起源于软件危机，其主要思想是按（ ）来组织和规范软件开发过程。（单选，1分）质量保证生产危机工程化的原则和方法开发效率 Q48. 软件重用的单位是（ ）。（单选，1分）软件模块性能过程功能 Q49. 检查软件产品是否符合需求定义的过程称为（ ）。（单选，1分）确认测试集成测试单元测试系统测试 Q50. 用于描绘软件项目的任务进度的图形工具是（ ）。（单选，1分）Gantt图事件跟踪图状态转换图协作图","categories":[{"name":"复习（预习）资料","slug":"复习（预习）资料","permalink":"https://blog.darkcrane.com/categories/%E5%A4%8D%E4%B9%A0%EF%BC%88%E9%A2%84%E4%B9%A0%EF%BC%89%E8%B5%84%E6%96%99/"}],"tags":[{"name":"复习资料","slug":"复习资料","permalink":"https://blog.darkcrane.com/tags/%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/"},{"name":"题库","slug":"题库","permalink":"https://blog.darkcrane.com/tags/%E9%A2%98%E5%BA%93/"},{"name":"软件工程","slug":"软件工程","permalink":"https://blog.darkcrane.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-03-15T09:00:20.000Z","updated":"2019-03-15T09:00:20.000Z","comments":true,"path":"posts/4a17b156/","link":"","permalink":"https://blog.darkcrane.com/posts/4a17b156/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"思想","slug":"思想","permalink":"https://blog.darkcrane.com/categories/%E6%80%9D%E6%83%B3/"},{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"Javaweb","slug":"学习/Javaweb","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/Javaweb/"},{"name":"工具","slug":"工具","permalink":"https://blog.darkcrane.com/categories/%E5%B7%A5%E5%85%B7/"},{"name":"Android","slug":"学习/Android","permalink":"https://blog.darkcrane.com/categories/%E5%AD%A6%E4%B9%A0/Android/"},{"name":"图床","slug":"图床","permalink":"https://blog.darkcrane.com/categories/%E5%9B%BE%E5%BA%8A/"},{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"},{"name":"复习（预习）资料","slug":"复习（预习）资料","permalink":"https://blog.darkcrane.com/categories/%E5%A4%8D%E4%B9%A0%EF%BC%88%E9%A2%84%E4%B9%A0%EF%BC%89%E8%B5%84%E6%96%99/"}],"tags":[{"name":"思想","slug":"思想","permalink":"https://blog.darkcrane.com/tags/%E6%80%9D%E6%83%B3/"},{"name":"共产党宣言","slug":"共产党宣言","permalink":"https://blog.darkcrane.com/tags/%E5%85%B1%E4%BA%A7%E5%85%9A%E5%AE%A3%E8%A8%80/"},{"name":"学习","slug":"学习","permalink":"https://blog.darkcrane.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"File","slug":"File","permalink":"https://blog.darkcrane.com/tags/File/"},{"name":"Javaweb","slug":"Javaweb","permalink":"https://blog.darkcrane.com/tags/Javaweb/"},{"name":"Java","slug":"Java","permalink":"https://blog.darkcrane.com/tags/Java/"},{"name":"坑","slug":"坑","permalink":"https://blog.darkcrane.com/tags/%E5%9D%91/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.darkcrane.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://blog.darkcrane.com/tags/Windows/"},{"name":"工具","slug":"工具","permalink":"https://blog.darkcrane.com/tags/%E5%B7%A5%E5%85%B7/"},{"name":"脚本","slug":"脚本","permalink":"https://blog.darkcrane.com/tags/%E8%84%9A%E6%9C%AC/"},{"name":"折腾","slug":"折腾","permalink":"https://blog.darkcrane.com/tags/%E6%8A%98%E8%85%BE/"},{"name":"b站","slug":"b站","permalink":"https://blog.darkcrane.com/tags/b%E7%AB%99/"},{"name":"bilbili","slug":"bilbili","permalink":"https://blog.darkcrane.com/tags/bilbili/"},{"name":"哔哩哔哩","slug":"哔哩哔哩","permalink":"https://blog.darkcrane.com/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/"},{"name":"头像","slug":"头像","permalink":"https://blog.darkcrane.com/tags/%E5%A4%B4%E5%83%8F/"},{"name":"Android","slug":"Android","permalink":"https://blog.darkcrane.com/tags/Android/"},{"name":"Fragment","slug":"Fragment","permalink":"https://blog.darkcrane.com/tags/Fragment/"},{"name":"Android碎片","slug":"Android碎片","permalink":"https://blog.darkcrane.com/tags/Android%E7%A2%8E%E7%89%87/"},{"name":"数据存储","slug":"数据存储","permalink":"https://blog.darkcrane.com/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"},{"name":"SharePreferences","slug":"SharePreferences","permalink":"https://blog.darkcrane.com/tags/SharePreferences/"},{"name":"SQLite","slug":"SQLite","permalink":"https://blog.darkcrane.com/tags/SQLite/"},{"name":"Content Provider","slug":"Content-Provider","permalink":"https://blog.darkcrane.com/tags/Content-Provider/"},{"name":"BroadcastReceiver","slug":"BroadcastReceiver","permalink":"https://blog.darkcrane.com/tags/BroadcastReceiver/"},{"name":"网站搭建","slug":"网站搭建","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"},{"name":"公益","slug":"公益","permalink":"https://blog.darkcrane.com/tags/%E5%85%AC%E7%9B%8A/"},{"name":"图床","slug":"图床","permalink":"https://blog.darkcrane.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"网站优化","slug":"网站优化","permalink":"https://blog.darkcrane.com/tags/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/"},{"name":"美化","slug":"美化","permalink":"https://blog.darkcrane.com/tags/%E7%BE%8E%E5%8C%96/"},{"name":"期末复习","slug":"期末复习","permalink":"https://blog.darkcrane.com/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"},{"name":"组原","slug":"组原","permalink":"https://blog.darkcrane.com/tags/%E7%BB%84%E5%8E%9F/"},{"name":"计算机组成原理","slug":"计算机组成原理","permalink":"https://blog.darkcrane.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"},{"name":"复习资料","slug":"复习资料","permalink":"https://blog.darkcrane.com/tags/%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/"},{"name":"题库","slug":"题库","permalink":"https://blog.darkcrane.com/tags/%E9%A2%98%E5%BA%93/"},{"name":"软件工程","slug":"软件工程","permalink":"https://blog.darkcrane.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"}]}